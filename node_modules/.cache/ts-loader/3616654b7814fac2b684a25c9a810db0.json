{"remainingRequest":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\babel-loader\\lib\\index.js!E:\\WebStormProject\\blog-vue-typescript\\node_modules\\ts-loader\\index.js??ref--13-2!E:\\WebStormProject\\blog-vue-typescript\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\WebStormProject\\blog-vue-typescript\\src\\views\\home.vue?vue&type=script&lang=ts&","dependencies":[{"path":"E:\\WebStormProject\\blog-vue-typescript\\src\\views\\home.vue","mtime":1573558720918},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.typed.float32-array\";\nimport _classCallCheck from \"E:\\\\WebStormProject\\\\blog-vue-typescript\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\WebStormProject\\\\blog-vue-typescript\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\WebStormProject\\\\blog-vue-typescript\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\WebStormProject\\\\blog-vue-typescript\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\WebStormProject\\\\blog-vue-typescript\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/inherits\";\nimport * as tslib_1 from \"tslib\"; // 满屏落花效果\n\nimport { Component, Vue } from \"vue-property-decorator\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(Home, _Vue);\n\n  function Home() {\n    _classCallCheck(this, Home);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Home).apply(this, arguments));\n  }\n\n  _createClass(Home, [{\n    key: \"mounted\",\n    value: function mounted() {\n      if (document.location.protocol === \"http:\") {\n        this.$message({\n          message: \"本网站已经配置了 https，为了有更好的体验效果，请把地址前缀换成 https 哦\",\n          type: \"warning\",\n          duration: 3000\n        });\n      }\n\n      var sakura_point_vsh = \"\\n    uniform mat4 uProjection;\\n    uniform mat4 uModelview;\\n    uniform vec3 uResolution;\\n    uniform vec3 uOffset;\\n    uniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\\n    uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\\n\\n    attribute vec3 aPosition;\\n    attribute vec3 aEuler;\\n    attribute vec2 aMisc; //x:size, y:fade\\n\\n    varying vec3 pposition;\\n    varying float psize;\\n    varying float palpha;\\n    varying float pdist;\\n\\n    //varying mat3 rotMat;\\n    varying vec3 normX;\\n    varying vec3 normY;\\n    varying vec3 normZ;\\n    varying vec3 normal;\\n\\n    varying float diffuse;\\n    varying float specular;\\n    varying float rstop;\\n    varying float distancefade;\\n\\n    void main(void) {\\n        // Projection is based on vertical angle\\n        vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\\n        gl_Position = uProjection * pos;\\n        gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\\n        \\n        pposition = pos.xyz;\\n        psize = aMisc.x;\\n        pdist = length(pos.xyz);\\n        palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\\n        \\n        vec3 elrsn = sin(aEuler);\\n        vec3 elrcs = cos(aEuler);\\n        mat3 rotx = mat3(\\n            1.0, 0.0, 0.0,\\n            0.0, elrcs.x, elrsn.x,\\n            0.0, -elrsn.x, elrcs.x\\n        );\\n        mat3 roty = mat3(\\n            elrcs.y, 0.0, -elrsn.y,\\n            0.0, 1.0, 0.0,\\n            elrsn.y, 0.0, elrcs.y\\n        );\\n        mat3 rotz = mat3(\\n            elrcs.z, elrsn.z, 0.0, \\n            -elrsn.z, elrcs.z, 0.0,\\n            0.0, 0.0, 1.0\\n        );\\n        mat3 rotmat = rotx * roty * rotz;\\n        normal = rotmat[2];\\n        \\n        mat3 trrotm = mat3(\\n            rotmat[0][0], rotmat[1][0], rotmat[2][0],\\n            rotmat[0][1], rotmat[1][1], rotmat[2][1],\\n            rotmat[0][2], rotmat[1][2], rotmat[2][2]\\n        );\\n        normX = trrotm[0];\\n        normY = trrotm[1];\\n        normZ = trrotm[2];\\n        \\n        const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\\n        \\n        float tmpdfs = dot(lit, normal);\\n        if(tmpdfs < 0.0) {\\n            normal = -normal;\\n            tmpdfs = dot(lit, normal);\\n        }\\n        diffuse = 0.4 + tmpdfs;\\n        \\n        vec3 eyev = normalize(-pos.xyz);\\n        if(dot(eyev, normal) > 0.0) {\\n            vec3 hv = normalize(eyev + lit);\\n            specular = pow(max(dot(hv, normal), 0.0), 20.0);\\n        }\\n        else {\\n            specular = 0.0;\\n        }\\n        \\n        rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\\n        rstop = pow(rstop, 0.5);\\n        //-0.69315 = ln(0.5)\\n        distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\\n    }\";\n      var sakura_point_fsh = \"\\n    #ifdef GL_ES\\n    //precision mediump float;\\n    precision highp float;\\n    #endif\\n\\n    uniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\\n    uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\\n\\n    const vec3 fadeCol = vec3(0.08, 0.03, 0.06);\\n\\n    varying vec3 pposition;\\n    varying float psize;\\n    varying float palpha;\\n    varying float pdist;\\n\\n    //varying mat3 rotMat;\\n    varying vec3 normX;\\n    varying vec3 normY;\\n    varying vec3 normZ;\\n    varying vec3 normal;\\n\\n    varying float diffuse;\\n    varying float specular;\\n    varying float rstop;\\n    varying float distancefade;\\n\\n    float ellipse(vec2 p, vec2 o, vec2 r) {\\n        vec2 lp = (p - o) / r;\\n        return length(lp) - 1.0;\\n    }\\n\\n    void main(void) {\\n        vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\\n        vec3 d = vec3(0.0, 0.0, -1.0);\\n        float nd = normZ.z; //dot(-normZ, d);\\n        if(abs(nd) < 0.0001) discard;\\n        \\n        float np = dot(normZ, p);\\n        vec3 tp = p + d * np / nd;\\n        vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\\n        \\n        //angle = 15 degree\\n        const float flwrsn = 0.258819045102521;\\n        const float flwrcs = 0.965925826289068;\\n        mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\\n        vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\\n        \\n        float r;\\n        if(flwrp.x < 0.0) {\\n            r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\\n        }\\n        else {\\n            r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\\n        }\\n        \\n        if(r > rstop) discard;\\n        \\n        vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\\n        float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\\n        col *= vec3(1.0, grady, grady);\\n        col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\\n        col = col * diffuse + specular;\\n        \\n        col = mix(fadeCol, col, distancefade);\\n        \\n        float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\\n        alpha = smoothstep(0.0, 1.0, alpha) * palpha;\\n        \\n        gl_FragColor = vec4(col * 0.5, alpha);\\n    }\";\n      var fx_common_vsh = \"\\n    uniform vec3 uResolution;\\n    attribute vec2 aPosition;\\n\\n    varying vec2 texCoord;\\n    varying vec2 screenCoord;\\n\\n    void main(void) {\\n        gl_Position = vec4(aPosition, 0.0, 1.0);\\n        texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\\n        screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\\n    }\";\n      var bg_fsh = \"\\n    #ifdef GL_ES\\n    //precision mediump float;\\n    precision highp float;\\n    #endif\\n\\n    uniform vec2 uTimes;\\n\\n    varying vec2 texCoord;\\n    varying vec2 screenCoord;\\n\\n    void main(void) {\\n        vec3 col;\\n        float c;\\n        vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\\n        c = exp(-pow(length(tmpv) * 1.8, 2.0));\\n        col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\\n        gl_FragColor = vec4(col * 0.5, 1.0);\\n    }\";\n      var fx_brightbuf_fsh = \"\\n    #ifdef GL_ES\\n    //precision mediump float;\\n    precision highp float;\\n    #endif\\n    uniform sampler2D uSrc;\\n    uniform vec2 uDelta;\\n\\n    varying vec2 texCoord;\\n    varying vec2 screenCoord;\\n\\n    void main(void) {\\n        vec4 col = texture2D(uSrc, texCoord);\\n        gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\\n    }\";\n      var fx_dirblur_r4_fsh = \"\\n    #ifdef GL_ES\\n    //precision mediump float;\\n    precision highp float;\\n    #endif\\n    uniform sampler2D uSrc;\\n    uniform vec2 uDelta;\\n    uniform vec4 uBlurDir; //dir(x, y), stride(z, w)\\n\\n    varying vec2 texCoord;\\n    varying vec2 screenCoord;\\n\\n    void main(void) {\\n        vec4 col = texture2D(uSrc, texCoord);\\n        col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\\n        col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\\n        col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\\n        col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\\n        gl_FragColor = col / 5.0;\\n    }\";\n      var pp_final_vsh = \"\\n    uniform vec3 uResolution;\\n    attribute vec2 aPosition;\\n    varying vec2 texCoord;\\n    varying vec2 screenCoord;\\n    void main(void) {\\n        gl_Position = vec4(aPosition, 0.0, 1.0);\\n        texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\\n        screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\\n    }\";\n      var pp_final_fsh = \"\\n    #ifdef GL_ES\\n    //precision mediump float;\\n    precision highp float;\\n    #endif\\n    uniform sampler2D uSrc;\\n    uniform sampler2D uBloom;\\n    uniform vec2 uDelta;\\n    varying vec2 texCoord;\\n    varying vec2 screenCoord;\\n    void main(void) {\\n        vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\\n        vec4 bloomcol = texture2D(uBloom, texCoord);\\n        vec4 col;\\n        col = srccol + bloomcol * (vec4(1.0) + srccol);\\n        col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\\n        col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\\n        \\n        gl_FragColor = vec4(col.rgb, 1.0);\\n        gl_FragColor.a = 1.0;\\n    }\"; // Utilities\n\n      var Vector3 = {};\n      var Matrix44 = {};\n\n      Vector3.create = function (x, y, z) {\n        return {\n          x: x,\n          y: y,\n          z: z\n        };\n      };\n\n      Vector3.dot = function (v0, v1) {\n        return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n      };\n\n      Vector3.cross = function (v, v0, v1) {\n        v.x = v0.y * v1.z - v0.z * v1.y;\n        v.y = v0.z * v1.x - v0.x * v1.z;\n        v.z = v0.x * v1.y - v0.y * v1.x;\n      };\n\n      Vector3.normalize = function (v) {\n        var l = v.x * v.x + v.y * v.y + v.z * v.z;\n\n        if (l > 0.00001) {\n          l = 1.0 / Math.sqrt(l);\n          v.x *= l;\n          v.y *= l;\n          v.z *= l;\n        }\n      };\n\n      Vector3.arrayForm = function (v) {\n        if (v.array) {\n          v.array[0] = v.x;\n          v.array[1] = v.y;\n          v.array[2] = v.z;\n        } else {\n          v.array = new Float32Array([v.x, v.y, v.z]);\n        }\n\n        return v.array;\n      };\n\n      Matrix44.createIdentity = function () {\n        return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n      };\n\n      Matrix44.loadProjection = function (m, aspect, vdeg, near, far) {\n        var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0;\n        var w = h * aspect;\n        m[0] = 2.0 * near / w;\n        m[1] = 0.0;\n        m[2] = 0.0;\n        m[3] = 0.0;\n        m[4] = 0.0;\n        m[5] = 2.0 * near / h;\n        m[6] = 0.0;\n        m[7] = 0.0;\n        m[8] = 0.0;\n        m[9] = 0.0;\n        m[10] = -(far + near) / (far - near);\n        m[11] = -1.0;\n        m[12] = 0.0;\n        m[13] = 0.0;\n        m[14] = -2.0 * far * near / (far - near);\n        m[15] = 0.0;\n      };\n\n      Matrix44.loadLookAt = function (m, vpos, vlook, vup) {\n        var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);\n        Vector3.normalize(frontv);\n        var sidev = Vector3.create(1.0, 0.0, 0.0);\n        Vector3.cross(sidev, vup, frontv);\n        Vector3.normalize(sidev);\n        var topv = Vector3.create(1.0, 0.0, 0.0);\n        Vector3.cross(topv, frontv, sidev);\n        Vector3.normalize(topv);\n        m[0] = sidev.x;\n        m[1] = topv.x;\n        m[2] = frontv.x;\n        m[3] = 0.0;\n        m[4] = sidev.y;\n        m[5] = topv.y;\n        m[6] = frontv.y;\n        m[7] = 0.0;\n        m[8] = sidev.z;\n        m[9] = topv.z;\n        m[10] = frontv.z;\n        m[11] = 0.0;\n        m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\n        m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\n        m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\n        m[15] = 1.0;\n      }; //\n\n\n      var timeInfo = {\n        start: 0,\n        prev: 0,\n        delta: 0,\n        elapsed: 0 // Number(sec)\n\n      }; //\n\n      var gl;\n      var renderSpec = {\n        width: 0,\n        height: 0,\n        aspect: 1,\n        array: new Float32Array(3),\n        halfWidth: 0,\n        halfHeight: 0,\n        halfArray: new Float32Array(3) // and some render targets. see setViewport()\n\n      };\n\n      renderSpec.setSize = function (w, h) {\n        renderSpec.width = w;\n        renderSpec.height = h;\n        renderSpec.aspect = renderSpec.width / renderSpec.height;\n        renderSpec.array[0] = renderSpec.width;\n        renderSpec.array[1] = renderSpec.height;\n        renderSpec.array[2] = renderSpec.aspect;\n        renderSpec.halfWidth = Math.floor(w / 2);\n        renderSpec.halfHeight = Math.floor(h / 2);\n        renderSpec.halfArray[0] = renderSpec.halfWidth;\n        renderSpec.halfArray[1] = renderSpec.halfHeight;\n        renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\n      };\n\n      function deleteRenderTarget(rt) {\n        gl.deleteFramebuffer(rt.frameBuffer);\n        gl.deleteRenderbuffer(rt.renderBuffer);\n        gl.deleteTexture(rt.texture);\n      }\n\n      function createRenderTarget(w, h) {\n        var ret = {\n          width: w,\n          height: h,\n          sizeArray: new Float32Array([w, h, w / h]),\n          dtxArray: new Float32Array([1.0 / w, 1.0 / h])\n        };\n        ret.frameBuffer = gl.createFramebuffer();\n        ret.renderBuffer = gl.createRenderbuffer();\n        ret.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, ret.texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        return ret;\n      }\n\n      function compileShader(shtype, shsrc) {\n        var retsh = gl.createShader(shtype);\n        gl.shaderSource(retsh, shsrc);\n        gl.compileShader(retsh);\n\n        if (!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\n          var errlog = gl.getShaderInfoLog(retsh);\n          gl.deleteShader(retsh);\n          console.error(errlog);\n          return null;\n        }\n\n        return retsh;\n      }\n\n      function createShader(vtxsrc, frgsrc, uniformlist, attrlist) {\n        var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);\n        var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);\n\n        if (vsh == null || fsh == null) {\n          return null;\n        }\n\n        var prog = gl.createProgram();\n        gl.attachShader(prog, vsh);\n        gl.attachShader(prog, fsh);\n        gl.deleteShader(vsh);\n        gl.deleteShader(fsh);\n        gl.linkProgram(prog);\n\n        if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n          var errlog = gl.getProgramInfoLog(prog);\n          console.error(errlog);\n          return null;\n        }\n\n        if (uniformlist) {\n          prog.uniforms = {};\n\n          for (var i = 0; i < uniformlist.length; i++) {\n            prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);\n          }\n        }\n\n        if (attrlist) {\n          prog.attributes = {};\n\n          for (var _i = 0; _i < attrlist.length; _i++) {\n            var attr = attrlist[_i];\n            prog.attributes[attr] = gl.getAttribLocation(prog, attr);\n          }\n        }\n\n        return prog;\n      }\n\n      function useShader(prog) {\n        gl.useProgram(prog);\n\n        for (var attr in prog.attributes) {\n          gl.enableVertexAttribArray(prog.attributes[attr]);\n        }\n      }\n\n      function unuseShader(prog) {\n        for (var attr in prog.attributes) {\n          gl.disableVertexAttribArray(prog.attributes[attr]);\n        }\n\n        gl.useProgram(null);\n      } /////\n\n\n      var projection = {\n        angle: 60,\n        nearfar: new Float32Array([0.1, 100.0]),\n        matrix: Matrix44.createIdentity()\n      };\n      var camera = {\n        position: Vector3.create(0, 0, 100),\n        lookat: Vector3.create(0, 0, 0),\n        up: Vector3.create(0, 1, 0),\n        dof: Vector3.create(10.0, 4.0, 8.0),\n        matrix: Matrix44.createIdentity()\n      };\n      var pointFlower = {}; // var meshFlower = {};\n\n      var sceneStandBy = false;\n\n      var BlossomParticle = function BlossomParticle() {\n        this.velocity = new Array(3);\n        this.rotation = new Array(3);\n        this.position = new Array(3);\n        this.euler = new Array(3);\n        this.size = 1.0;\n        this.alpha = 1.0;\n        this.zkey = 0.0;\n      };\n\n      BlossomParticle.prototype.setVelocity = function (vx, vy, vz) {\n        this.velocity[0] = vx;\n        this.velocity[1] = vy;\n        this.velocity[2] = vz;\n      };\n\n      BlossomParticle.prototype.setRotation = function (rx, ry, rz) {\n        this.rotation[0] = rx;\n        this.rotation[1] = ry;\n        this.rotation[2] = rz;\n      };\n\n      BlossomParticle.prototype.setPosition = function (nx, ny, nz) {\n        this.position[0] = nx;\n        this.position[1] = ny;\n        this.position[2] = nz;\n      };\n\n      BlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) {\n        this.euler[0] = rx;\n        this.euler[1] = ry;\n        this.euler[2] = rz;\n      };\n\n      BlossomParticle.prototype.setSize = function (s) {\n        this.size = s;\n      };\n\n      BlossomParticle.prototype.update = function (dt, et) {\n        this.position[0] += this.velocity[0] * dt;\n        this.position[1] += this.velocity[1] * dt;\n        this.position[2] += this.velocity[2] * dt;\n        this.euler[0] += this.rotation[0] * dt;\n        this.euler[1] += this.rotation[1] * dt;\n        this.euler[2] += this.rotation[2] * dt;\n      };\n\n      function createPointFlowers() {\n        // get point sizes\n        var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n        renderSpec.pointSize = {\n          min: prm[0],\n          max: prm[1]\n        };\n        var vtxsrc = sakura_point_vsh;\n        var frgsrc = sakura_point_fsh;\n        pointFlower.program = createShader(vtxsrc, frgsrc, [\"uProjection\", \"uModelview\", \"uResolution\", \"uOffset\", \"uDOF\", \"uFade\"], [\"aPosition\", \"aEuler\", \"aMisc\"]);\n        useShader(pointFlower.program);\n        pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\n        pointFlower.fader = Vector3.create(0.0, 10.0, 0.0); // paramerters: velocity[3], rotate[3]\n\n        pointFlower.numFlowers = 1600;\n        pointFlower.particles = new Array(pointFlower.numFlowers); // vertex attributes {position[3], euler_xyz[3], size[1]}\n\n        pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2));\n        pointFlower.positionArrayOffset = 0;\n        pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\n        pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\n        pointFlower.buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        unuseShader(pointFlower.program);\n\n        for (var i = 0; i < pointFlower.numFlowers; i++) {\n          pointFlower.particles[i] = new BlossomParticle();\n        }\n      }\n\n      function initPointFlowers() {\n        //area\n        pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\n        pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\n        pointFlower.fader.x = 10.0; //env fade start\n\n        pointFlower.fader.y = pointFlower.area.z; //env fade half\n\n        pointFlower.fader.z = 0.1; //near fade start\n        //particles\n\n        var PI2 = Math.PI * 2.0;\n        var tmpv3 = Vector3.create(0, 0, 0);\n        var tmpv = 0;\n\n        var symmetryrand = function symmetryrand() {\n          return Math.random() * 2.0 - 1.0;\n        };\n\n        for (var i = 0; i < pointFlower.numFlowers; i++) {\n          var tmpprtcl = pointFlower.particles[i]; //velocity\n\n          tmpv3.x = symmetryrand() * 0.3 + 0.8;\n          tmpv3.y = symmetryrand() * 0.2 - 1.0;\n          tmpv3.z = symmetryrand() * 0.3 + 0.5;\n          Vector3.normalize(tmpv3);\n          tmpv = 2.0 + Math.random() * 1.0;\n          tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv); //rotation\n\n          tmpprtcl.setRotation(symmetryrand() * PI2 * 0.5, symmetryrand() * PI2 * 0.5, symmetryrand() * PI2 * 0.5); //position\n\n          tmpprtcl.setPosition(symmetryrand() * pointFlower.area.x, symmetryrand() * pointFlower.area.y, symmetryrand() * pointFlower.area.z); //euler\n\n          tmpprtcl.setEulerAngles(Math.random() * Math.PI * 2.0, Math.random() * Math.PI * 2.0, Math.random() * Math.PI * 2.0); //size\n\n          tmpprtcl.setSize(0.9 + Math.random() * 0.1);\n        }\n      }\n\n      function renderPointFlowers() {\n        //update\n        var PI2 = Math.PI * 2.0; // var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\n\n        var repeatPos = function repeatPos(prt, cmp, limit) {\n          if (Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\n            //out of area\n            if (prt.position[cmp] > 0) {\n              prt.position[cmp] -= limit * 2.0;\n            } else {\n              prt.position[cmp] += limit * 2.0;\n            }\n          }\n        };\n\n        var repeatEuler = function repeatEuler(prt, cmp) {\n          prt.euler[cmp] = prt.euler[cmp] % PI2;\n\n          if (prt.euler[cmp] < 0.0) {\n            prt.euler[cmp] += PI2;\n          }\n        };\n\n        for (var i = 0; i < pointFlower.numFlowers; i++) {\n          var prtcl = pointFlower.particles[i];\n          prtcl.update(timeInfo.delta, timeInfo.elapsed);\n          repeatPos(prtcl, 0, pointFlower.area.x);\n          repeatPos(prtcl, 1, pointFlower.area.y);\n          repeatPos(prtcl, 2, pointFlower.area.z);\n          repeatEuler(prtcl, 0);\n          repeatEuler(prtcl, 1);\n          repeatEuler(prtcl, 2);\n          prtcl.alpha = 1.0; //(pointFlower.area.z - prtcl.position[2]) * 0.5;\n\n          prtcl.zkey = camera.matrix[2] * prtcl.position[0] + camera.matrix[6] * prtcl.position[1] + camera.matrix[10] * prtcl.position[2] + camera.matrix[14];\n        } // sort\n\n\n        pointFlower.particles.sort(function (p0, p1) {\n          return p0.zkey - p1.zkey;\n        }); // update data\n\n        var ipos = pointFlower.positionArrayOffset;\n        var ieuler = pointFlower.eulerArrayOffset;\n        var imisc = pointFlower.miscArrayOffset;\n\n        for (var _i2 = 0; _i2 < pointFlower.numFlowers; _i2++) {\n          var _prtcl = pointFlower.particles[_i2];\n          pointFlower.dataArray[ipos] = _prtcl.position[0];\n          pointFlower.dataArray[ipos + 1] = _prtcl.position[1];\n          pointFlower.dataArray[ipos + 2] = _prtcl.position[2];\n          ipos += 3;\n          pointFlower.dataArray[ieuler] = _prtcl.euler[0];\n          pointFlower.dataArray[ieuler + 1] = _prtcl.euler[1];\n          pointFlower.dataArray[ieuler + 2] = _prtcl.euler[2];\n          ieuler += 3;\n          pointFlower.dataArray[imisc] = _prtcl.size;\n          pointFlower.dataArray[imisc + 1] = _prtcl.alpha;\n          imisc += 2;\n        } //draw\n\n\n        gl.enable(gl.BLEND); //gl.disable(gl.DEPTH_TEST);\n\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        var prog = pointFlower.program;\n        useShader(prog);\n        gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\n        gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\n        gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n        gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\n        gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\n        gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n        gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n        gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n        gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT); // doubler\n\n        for (var _i3 = 1; _i3 < 2; _i3++) {\n          var zpos = _i3 * -2.0;\n          pointFlower.offset[0] = pointFlower.area.x * -1.0;\n          pointFlower.offset[1] = pointFlower.area.y * -1.0;\n          pointFlower.offset[2] = pointFlower.area.z * zpos;\n          gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n          gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n          pointFlower.offset[0] = pointFlower.area.x * -1.0;\n          pointFlower.offset[1] = pointFlower.area.y * 1.0;\n          pointFlower.offset[2] = pointFlower.area.z * zpos;\n          gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n          gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n          pointFlower.offset[0] = pointFlower.area.x * 1.0;\n          pointFlower.offset[1] = pointFlower.area.y * -1.0;\n          pointFlower.offset[2] = pointFlower.area.z * zpos;\n          gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n          gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n          pointFlower.offset[0] = pointFlower.area.x * 1.0;\n          pointFlower.offset[1] = pointFlower.area.y * 1.0;\n          pointFlower.offset[2] = pointFlower.area.z * zpos;\n          gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n          gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        } //main\n\n\n        pointFlower.offset[0] = 0.0;\n        pointFlower.offset[1] = 0.0;\n        pointFlower.offset[2] = 0.0;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        unuseShader(prog);\n        gl.enable(gl.DEPTH_TEST);\n        gl.disable(gl.BLEND);\n      } // effects\n      //common util\n\n\n      function createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) {\n        var ret = {};\n        var unifs = [\"uResolution\", \"uSrc\", \"uDelta\"];\n\n        if (exunifs) {\n          unifs = unifs.concat(exunifs);\n        }\n\n        var attrs = [\"aPosition\"];\n\n        if (exattrs) {\n          attrs = attrs.concat(exattrs);\n        }\n\n        ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\n        useShader(ret.program);\n        ret.dataArray = new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0]);\n        ret.buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        unuseShader(ret.program);\n        return ret;\n      } // basic usage\n      // useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize\n      // gl.uniform**(...); //additional uniforms\n      // drawEffect()\n      // unuseEffect(prog)\n      // TEXTURE0 makes src\n\n\n      function useEffect(fxobj, srctex) {\n        var prog = fxobj.program;\n        useShader(prog);\n        gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n\n        if (srctex != null) {\n          gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\n          gl.uniform1i(prog.uniforms.uSrc, 0);\n          gl.activeTexture(gl.TEXTURE0);\n          gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\n        }\n      }\n\n      function drawEffect(fxobj) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\n        gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      }\n\n      function unuseEffect(fxobj) {\n        unuseShader(fxobj.program);\n      }\n\n      var effectLib = {};\n\n      function createEffectLib() {\n        var vtxsrc, frgsrc; //common\n\n        var cmnvtxsrc = fx_common_vsh; //background\n\n        frgsrc = bg_fsh;\n        effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, [\"uTimes\"], null); // make brightpixels buffer\n\n        frgsrc = fx_brightbuf_fsh;\n        effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null); // direction blur\n\n        frgsrc = fx_dirblur_r4_fsh;\n        effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, [\"uBlurDir\"], null); //final composite\n\n        vtxsrc = pp_final_vsh;\n        frgsrc = pp_final_fsh; // console.log('frgsrc :',frgsrc )\n\n        effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, [\"uBloom\"], null);\n      } // background\n\n\n      function createBackground() {//console.log(\"create background\");\n      }\n\n      function initBackground() {//console.log(\"init background\");\n      }\n\n      function renderBackground() {\n        gl.disable(gl.DEPTH_TEST);\n        useEffect(effectLib.sceneBg, null);\n        gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);\n        drawEffect(effectLib.sceneBg);\n        unuseEffect(effectLib.sceneBg);\n        gl.enable(gl.DEPTH_TEST);\n      } // post process\n      // var postProcess = {};\n\n\n      function createPostProcess() {//console.log(\"create post process\");\n      }\n\n      function initPostProcess() {//console.log(\"init post process\");\n      }\n\n      function renderPostProcess() {\n        gl.enable(gl.TEXTURE_2D);\n        gl.disable(gl.DEPTH_TEST);\n\n        var bindRT = function bindRT(rt, isclear) {\n          gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\n          gl.viewport(0, 0, rt.width, rt.height);\n\n          if (isclear) {\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          }\n        }; //make bright buff\n\n\n        bindRT(renderSpec.wHalfRT0, true);\n        useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\n        drawEffect(effectLib.mkBrightBuf);\n        unuseEffect(effectLib.mkBrightBuf); // make bloom\n\n        for (var i = 0; i < 2; i++) {\n          var p = 1.5 + 1 * i;\n          var s = 2.0 + 1 * i;\n          bindRT(renderSpec.wHalfRT1, true);\n          useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\n          gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0);\n          drawEffect(effectLib.dirBlur);\n          unuseEffect(effectLib.dirBlur);\n          bindRT(renderSpec.wHalfRT0, true);\n          useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\n          gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s);\n          drawEffect(effectLib.dirBlur);\n          unuseEffect(effectLib.dirBlur);\n        } //display\n\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        useEffect(effectLib.finalComp, renderSpec.mainRT);\n        gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\n        drawEffect(effectLib.finalComp);\n        unuseEffect(effectLib.finalComp);\n        gl.enable(gl.DEPTH_TEST);\n      } /////\n      // var SceneEnv = {};\n\n\n      function createScene() {\n        createEffectLib();\n        createBackground();\n        createPointFlowers();\n        createPostProcess();\n        sceneStandBy = true;\n      }\n\n      function initScene() {\n        initBackground();\n        initPointFlowers();\n        initPostProcess(); //camera.position.z = 17.320508;\n\n        camera.position.z = pointFlower.area.z + projection.nearfar[0];\n        projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0;\n        Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]);\n      }\n\n      function renderScene() {\n        //draw\n        Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);\n        gl.enable(gl.DEPTH_TEST); //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\n        gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\n        gl.clearColor(0.005, 0, 0.05, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        renderBackground();\n        renderPointFlowers();\n        renderPostProcess();\n      } /////\n\n\n      function onResize(e) {\n        makeCanvasFullScreen(document.getElementById(\"sakura\"));\n        setViewports();\n\n        if (sceneStandBy) {\n          initScene();\n        }\n      }\n\n      function setViewports() {\n        renderSpec.setSize(gl.canvas.width, gl.canvas.height);\n        gl.clearColor(0.2, 0.2, 0.5, 1.0);\n        gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n\n        var rtfunc = function rtfunc(rtname, rtw, rth) {\n          var rt = renderSpec[rtname];\n          if (rt) deleteRenderTarget(rt);\n          renderSpec[rtname] = createRenderTarget(rtw, rth);\n        };\n\n        rtfunc(\"mainRT\", renderSpec.width, renderSpec.height);\n        rtfunc(\"wFullRT0\", renderSpec.width, renderSpec.height);\n        rtfunc(\"wFullRT1\", renderSpec.width, renderSpec.height);\n        rtfunc(\"wHalfRT0\", renderSpec.halfWidth, renderSpec.halfHeight);\n        rtfunc(\"wHalfRT1\", renderSpec.halfWidth, renderSpec.halfHeight);\n      }\n\n      function render() {\n        renderScene();\n      }\n\n      var animating = true;\n\n      function animate() {\n        var curdate = new Date();\n        timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\n        timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\n        timeInfo.prev = curdate;\n        if (animating) requestAnimationFrame(animate);\n        render();\n      }\n\n      function makeCanvasFullScreen(canvas) {\n        var b = document.body;\n        var d = document.documentElement;\n        var fullw = Math.max(b.clientWidth, b.scrollWidth, d.scrollWidth, d.clientWidth);\n        var fullh = Math.max(b.clientHeight, b.scrollHeight, d.scrollHeight, d.clientHeight);\n        canvas.width = fullw;\n        canvas.height = fullh;\n      } // window.addEventListener(\"load\", function(e: any) {\n      //   var canvas: any = document.getElementById(\"sakura\");\n      //   try {\n      //     makeCanvasFullScreen(canvas);\n      //     gl = canvas.getContext(\"experimental-webgl\");\n      //   } catch (e) {\n      //     alert(\"WebGL not supported.\" + e);\n      //     console.log(\"WebGL not supported :\", e);\n      //     return;\n      //   }\n      //   window.addEventListener(\"resize\", onResize);\n      //   setViewports();\n      //   createScene();\n      //   initScene();\n      //   timeInfo.start = new Date();\n      //   timeInfo.prev = timeInfo.start;\n      //   animate();\n      // });\n      // 保证每次都执行\n\n\n      var canvas = document.getElementById(\"sakura\");\n\n      try {\n        makeCanvasFullScreen(canvas);\n        gl = canvas.getContext(\"experimental-webgl\");\n      } catch (e) {\n        alert(\"WebGL not supported.\" + e);\n        console.error(e);\n        return;\n      }\n\n      window.addEventListener(\"resize\", onResize);\n      setViewports();\n      createScene();\n      initScene();\n      timeInfo.start = new Date();\n      timeInfo.prev = timeInfo.start;\n      animate(); //set window.requestAnimationFrame\n\n      (function (w, r) {\n        w[\"r\" + r] = w[\"r\" + r] || w[\"webkitR\" + r] || w[\"mozR\" + r] || w[\"msR\" + r] || w[\"oR\" + r] || function (c) {\n          w.setTimeout(c, 1000 / 60);\n        };\n      })(window, \"equestAnimationFrame\");\n    }\n  }]);\n\n  return Home;\n}(Vue);\n\nHome = tslib_1.__decorate([Component({})], Home);\nexport default Home;",{"version":3,"sources":["E:\\WebStormProject\\blog-vue-typescript\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\WebStormProject\\blog-vue-typescript\\src\\views\\home.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n// 满屏落花效果\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\ndeclare var document: Document | any;\r\n\r\n@Component({})\r\nexport default class Home extends Vue {\r\n  mounted() {\r\n    if (document.location.protocol === \"http:\") {\r\n      this.$message({\r\n        message:\r\n          \"本网站已经配置了 https，为了有更好的体验效果，请把地址前缀换成 https 哦\",\r\n        type: \"warning\",\r\n        duration: 3000\r\n      });\r\n    }\r\n    let sakura_point_vsh: string = `\r\n    uniform mat4 uProjection;\r\n    uniform mat4 uModelview;\r\n    uniform vec3 uResolution;\r\n    uniform vec3 uOffset;\r\n    uniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\r\n    uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\r\n\r\n    attribute vec3 aPosition;\r\n    attribute vec3 aEuler;\r\n    attribute vec2 aMisc; //x:size, y:fade\r\n\r\n    varying vec3 pposition;\r\n    varying float psize;\r\n    varying float palpha;\r\n    varying float pdist;\r\n\r\n    //varying mat3 rotMat;\r\n    varying vec3 normX;\r\n    varying vec3 normY;\r\n    varying vec3 normZ;\r\n    varying vec3 normal;\r\n\r\n    varying float diffuse;\r\n    varying float specular;\r\n    varying float rstop;\r\n    varying float distancefade;\r\n\r\n    void main(void) {\r\n        // Projection is based on vertical angle\r\n        vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\r\n        gl_Position = uProjection * pos;\r\n        gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\r\n        \r\n        pposition = pos.xyz;\r\n        psize = aMisc.x;\r\n        pdist = length(pos.xyz);\r\n        palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\r\n        \r\n        vec3 elrsn = sin(aEuler);\r\n        vec3 elrcs = cos(aEuler);\r\n        mat3 rotx = mat3(\r\n            1.0, 0.0, 0.0,\r\n            0.0, elrcs.x, elrsn.x,\r\n            0.0, -elrsn.x, elrcs.x\r\n        );\r\n        mat3 roty = mat3(\r\n            elrcs.y, 0.0, -elrsn.y,\r\n            0.0, 1.0, 0.0,\r\n            elrsn.y, 0.0, elrcs.y\r\n        );\r\n        mat3 rotz = mat3(\r\n            elrcs.z, elrsn.z, 0.0, \r\n            -elrsn.z, elrcs.z, 0.0,\r\n            0.0, 0.0, 1.0\r\n        );\r\n        mat3 rotmat = rotx * roty * rotz;\r\n        normal = rotmat[2];\r\n        \r\n        mat3 trrotm = mat3(\r\n            rotmat[0][0], rotmat[1][0], rotmat[2][0],\r\n            rotmat[0][1], rotmat[1][1], rotmat[2][1],\r\n            rotmat[0][2], rotmat[1][2], rotmat[2][2]\r\n        );\r\n        normX = trrotm[0];\r\n        normY = trrotm[1];\r\n        normZ = trrotm[2];\r\n        \r\n        const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\r\n        \r\n        float tmpdfs = dot(lit, normal);\r\n        if(tmpdfs < 0.0) {\r\n            normal = -normal;\r\n            tmpdfs = dot(lit, normal);\r\n        }\r\n        diffuse = 0.4 + tmpdfs;\r\n        \r\n        vec3 eyev = normalize(-pos.xyz);\r\n        if(dot(eyev, normal) > 0.0) {\r\n            vec3 hv = normalize(eyev + lit);\r\n            specular = pow(max(dot(hv, normal), 0.0), 20.0);\r\n        }\r\n        else {\r\n            specular = 0.0;\r\n        }\r\n        \r\n        rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\r\n        rstop = pow(rstop, 0.5);\r\n        //-0.69315 = ln(0.5)\r\n        distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\r\n    }`;\r\n    let sakura_point_fsh: string = `\r\n    #ifdef GL_ES\r\n    //precision mediump float;\r\n    precision highp float;\r\n    #endif\r\n\r\n    uniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\r\n    uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\r\n\r\n    const vec3 fadeCol = vec3(0.08, 0.03, 0.06);\r\n\r\n    varying vec3 pposition;\r\n    varying float psize;\r\n    varying float palpha;\r\n    varying float pdist;\r\n\r\n    //varying mat3 rotMat;\r\n    varying vec3 normX;\r\n    varying vec3 normY;\r\n    varying vec3 normZ;\r\n    varying vec3 normal;\r\n\r\n    varying float diffuse;\r\n    varying float specular;\r\n    varying float rstop;\r\n    varying float distancefade;\r\n\r\n    float ellipse(vec2 p, vec2 o, vec2 r) {\r\n        vec2 lp = (p - o) / r;\r\n        return length(lp) - 1.0;\r\n    }\r\n\r\n    void main(void) {\r\n        vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\r\n        vec3 d = vec3(0.0, 0.0, -1.0);\r\n        float nd = normZ.z; //dot(-normZ, d);\r\n        if(abs(nd) < 0.0001) discard;\r\n        \r\n        float np = dot(normZ, p);\r\n        vec3 tp = p + d * np / nd;\r\n        vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\r\n        \r\n        //angle = 15 degree\r\n        const float flwrsn = 0.258819045102521;\r\n        const float flwrcs = 0.965925826289068;\r\n        mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\r\n        vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\r\n        \r\n        float r;\r\n        if(flwrp.x < 0.0) {\r\n            r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\r\n        }\r\n        else {\r\n            r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\r\n        }\r\n        \r\n        if(r > rstop) discard;\r\n        \r\n        vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\r\n        float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\r\n        col *= vec3(1.0, grady, grady);\r\n        col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\r\n        col = col * diffuse + specular;\r\n        \r\n        col = mix(fadeCol, col, distancefade);\r\n        \r\n        float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\r\n        alpha = smoothstep(0.0, 1.0, alpha) * palpha;\r\n        \r\n        gl_FragColor = vec4(col * 0.5, alpha);\r\n    }`;\r\n    let fx_common_vsh: string = `\r\n    uniform vec3 uResolution;\r\n    attribute vec2 aPosition;\r\n\r\n    varying vec2 texCoord;\r\n    varying vec2 screenCoord;\r\n\r\n    void main(void) {\r\n        gl_Position = vec4(aPosition, 0.0, 1.0);\r\n        texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\r\n        screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\r\n    }`;\r\n    let bg_fsh: string = `\r\n    #ifdef GL_ES\r\n    //precision mediump float;\r\n    precision highp float;\r\n    #endif\r\n\r\n    uniform vec2 uTimes;\r\n\r\n    varying vec2 texCoord;\r\n    varying vec2 screenCoord;\r\n\r\n    void main(void) {\r\n        vec3 col;\r\n        float c;\r\n        vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\r\n        c = exp(-pow(length(tmpv) * 1.8, 2.0));\r\n        col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\r\n        gl_FragColor = vec4(col * 0.5, 1.0);\r\n    }`;\r\n    let fx_brightbuf_fsh: string = `\r\n    #ifdef GL_ES\r\n    //precision mediump float;\r\n    precision highp float;\r\n    #endif\r\n    uniform sampler2D uSrc;\r\n    uniform vec2 uDelta;\r\n\r\n    varying vec2 texCoord;\r\n    varying vec2 screenCoord;\r\n\r\n    void main(void) {\r\n        vec4 col = texture2D(uSrc, texCoord);\r\n        gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\r\n    }`;\r\n    let fx_dirblur_r4_fsh: string = `\r\n    #ifdef GL_ES\r\n    //precision mediump float;\r\n    precision highp float;\r\n    #endif\r\n    uniform sampler2D uSrc;\r\n    uniform vec2 uDelta;\r\n    uniform vec4 uBlurDir; //dir(x, y), stride(z, w)\r\n\r\n    varying vec2 texCoord;\r\n    varying vec2 screenCoord;\r\n\r\n    void main(void) {\r\n        vec4 col = texture2D(uSrc, texCoord);\r\n        col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\r\n        col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\r\n        col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\r\n        col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\r\n        gl_FragColor = col / 5.0;\r\n    }`;\r\n    let pp_final_vsh: string = `\r\n    uniform vec3 uResolution;\r\n    attribute vec2 aPosition;\r\n    varying vec2 texCoord;\r\n    varying vec2 screenCoord;\r\n    void main(void) {\r\n        gl_Position = vec4(aPosition, 0.0, 1.0);\r\n        texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\r\n        screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\r\n    }`;\r\n    let pp_final_fsh: string = `\r\n    #ifdef GL_ES\r\n    //precision mediump float;\r\n    precision highp float;\r\n    #endif\r\n    uniform sampler2D uSrc;\r\n    uniform sampler2D uBloom;\r\n    uniform vec2 uDelta;\r\n    varying vec2 texCoord;\r\n    varying vec2 screenCoord;\r\n    void main(void) {\r\n        vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\r\n        vec4 bloomcol = texture2D(uBloom, texCoord);\r\n        vec4 col;\r\n        col = srccol + bloomcol * (vec4(1.0) + srccol);\r\n        col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\r\n        col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\r\n        \r\n        gl_FragColor = vec4(col.rgb, 1.0);\r\n        gl_FragColor.a = 1.0;\r\n    }`;\r\n\r\n    // Utilities\r\n    var Vector3: any = {};\r\n    var Matrix44: any = {};\r\n    Vector3.create = function(x: any, y: any, z: any) {\r\n      return { x: x, y: y, z: z };\r\n    };\r\n    Vector3.dot = function(v0: any, v1: any) {\r\n      return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\r\n    };\r\n    Vector3.cross = function(v: any, v0: any, v1: any) {\r\n      v.x = v0.y * v1.z - v0.z * v1.y;\r\n      v.y = v0.z * v1.x - v0.x * v1.z;\r\n      v.z = v0.x * v1.y - v0.y * v1.x;\r\n    };\r\n    Vector3.normalize = function(v: any) {\r\n      var l: any = v.x * v.x + v.y * v.y + v.z * v.z;\r\n      if (l > 0.00001) {\r\n        l = 1.0 / Math.sqrt(l);\r\n        v.x *= l;\r\n        v.y *= l;\r\n        v.z *= l;\r\n      }\r\n    };\r\n    Vector3.arrayForm = function(v: any) {\r\n      if (v.array) {\r\n        v.array[0] = v.x;\r\n        v.array[1] = v.y;\r\n        v.array[2] = v.z;\r\n      } else {\r\n        v.array = new Float32Array([v.x, v.y, v.z]);\r\n      }\r\n      return v.array;\r\n    };\r\n    Matrix44.createIdentity = function() {\r\n      return new Float32Array([\r\n        1.0,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        1.0,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        1.0,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        1.0\r\n      ]);\r\n    };\r\n    Matrix44.loadProjection = function(\r\n      m: any,\r\n      aspect: any,\r\n      vdeg: any,\r\n      near: any,\r\n      far: any\r\n    ) {\r\n      let h = near * Math.tan(((vdeg * Math.PI) / 180.0) * 0.5) * 2.0;\r\n      let w = h * aspect;\r\n\r\n      m[0] = (2.0 * near) / w;\r\n      m[1] = 0.0;\r\n      m[2] = 0.0;\r\n      m[3] = 0.0;\r\n\r\n      m[4] = 0.0;\r\n      m[5] = (2.0 * near) / h;\r\n      m[6] = 0.0;\r\n      m[7] = 0.0;\r\n\r\n      m[8] = 0.0;\r\n      m[9] = 0.0;\r\n      m[10] = -(far + near) / (far - near);\r\n      m[11] = -1.0;\r\n\r\n      m[12] = 0.0;\r\n      m[13] = 0.0;\r\n      m[14] = (-2.0 * far * near) / (far - near);\r\n      m[15] = 0.0;\r\n    };\r\n    Matrix44.loadLookAt = function(m: any, vpos: any, vlook: any, vup: any) {\r\n      let frontv = Vector3.create(\r\n        vpos.x - vlook.x,\r\n        vpos.y - vlook.y,\r\n        vpos.z - vlook.z\r\n      );\r\n      Vector3.normalize(frontv);\r\n      let sidev = Vector3.create(1.0, 0.0, 0.0);\r\n      Vector3.cross(sidev, vup, frontv);\r\n      Vector3.normalize(sidev);\r\n      let topv = Vector3.create(1.0, 0.0, 0.0);\r\n      Vector3.cross(topv, frontv, sidev);\r\n      Vector3.normalize(topv);\r\n\r\n      m[0] = sidev.x;\r\n      m[1] = topv.x;\r\n      m[2] = frontv.x;\r\n      m[3] = 0.0;\r\n\r\n      m[4] = sidev.y;\r\n      m[5] = topv.y;\r\n      m[6] = frontv.y;\r\n      m[7] = 0.0;\r\n\r\n      m[8] = sidev.z;\r\n      m[9] = topv.z;\r\n      m[10] = frontv.z;\r\n      m[11] = 0.0;\r\n\r\n      m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\r\n      m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\r\n      m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\r\n      m[15] = 1.0;\r\n    };\r\n\r\n    //\r\n    var timeInfo: any = {\r\n      start: 0,\r\n      prev: 0, // Date\r\n      delta: 0,\r\n      elapsed: 0 // Number(sec)\r\n    };\r\n\r\n    //\r\n    var gl: any;\r\n    var renderSpec: any = {\r\n      width: 0,\r\n      height: 0,\r\n      aspect: 1,\r\n      array: new Float32Array(3),\r\n      halfWidth: 0,\r\n      halfHeight: 0,\r\n      halfArray: new Float32Array(3)\r\n      // and some render targets. see setViewport()\r\n    };\r\n    renderSpec.setSize = function(w: any, h: any) {\r\n      renderSpec.width = w;\r\n      renderSpec.height = h;\r\n      renderSpec.aspect = renderSpec.width / renderSpec.height;\r\n      renderSpec.array[0] = renderSpec.width;\r\n      renderSpec.array[1] = renderSpec.height;\r\n      renderSpec.array[2] = renderSpec.aspect;\r\n\r\n      renderSpec.halfWidth = Math.floor(w / 2);\r\n      renderSpec.halfHeight = Math.floor(h / 2);\r\n      renderSpec.halfArray[0] = renderSpec.halfWidth;\r\n      renderSpec.halfArray[1] = renderSpec.halfHeight;\r\n      renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\r\n    };\r\n\r\n    function deleteRenderTarget(rt: any) {\r\n      gl.deleteFramebuffer(rt.frameBuffer);\r\n      gl.deleteRenderbuffer(rt.renderBuffer);\r\n      gl.deleteTexture(rt.texture);\r\n    }\r\n\r\n    function createRenderTarget(w: any, h: any) {\r\n      var ret: any = {\r\n        width: w,\r\n        height: h,\r\n        sizeArray: new Float32Array([w, h, w / h]),\r\n        dtxArray: new Float32Array([1.0 / w, 1.0 / h])\r\n      };\r\n      ret.frameBuffer = gl.createFramebuffer();\r\n      ret.renderBuffer = gl.createRenderbuffer();\r\n      ret.texture = gl.createTexture();\r\n\r\n      gl.bindTexture(gl.TEXTURE_2D, ret.texture);\r\n      gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,\r\n        gl.RGBA,\r\n        w,\r\n        h,\r\n        0,\r\n        gl.RGBA,\r\n        gl.UNSIGNED_BYTE,\r\n        null\r\n      );\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\r\n      gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER,\r\n        gl.COLOR_ATTACHMENT0,\r\n        gl.TEXTURE_2D,\r\n        ret.texture,\r\n        0\r\n      );\r\n\r\n      gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\r\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\r\n      gl.framebufferRenderbuffer(\r\n        gl.FRAMEBUFFER,\r\n        gl.DEPTH_ATTACHMENT,\r\n        gl.RENDERBUFFER,\r\n        ret.renderBuffer\r\n      );\r\n\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n      return ret;\r\n    }\r\n\r\n    function compileShader(shtype: any, shsrc: any) {\r\n      var retsh: any = gl.createShader(shtype);\r\n\r\n      gl.shaderSource(retsh, shsrc);\r\n      gl.compileShader(retsh);\r\n\r\n      if (!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\r\n        var errlog: any = gl.getShaderInfoLog(retsh);\r\n        gl.deleteShader(retsh);\r\n        console.error(errlog);\r\n        return null;\r\n      }\r\n      return retsh;\r\n    }\r\n\r\n    function createShader(\r\n      vtxsrc: any,\r\n      frgsrc: any,\r\n      uniformlist: any,\r\n      attrlist: any\r\n    ) {\r\n      var vsh: any = compileShader(gl.VERTEX_SHADER, vtxsrc);\r\n      var fsh: any = compileShader(gl.FRAGMENT_SHADER, frgsrc);\r\n\r\n      if (vsh == null || fsh == null) {\r\n        return null;\r\n      }\r\n\r\n      var prog: any = gl.createProgram();\r\n      gl.attachShader(prog, vsh);\r\n      gl.attachShader(prog, fsh);\r\n\r\n      gl.deleteShader(vsh);\r\n      gl.deleteShader(fsh);\r\n\r\n      gl.linkProgram(prog);\r\n      if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\r\n        var errlog: any = gl.getProgramInfoLog(prog);\r\n        console.error(errlog);\r\n        return null;\r\n      }\r\n\r\n      if (uniformlist) {\r\n        prog.uniforms = {};\r\n        for (var i = 0; i < uniformlist.length; i++) {\r\n          prog.uniforms[uniformlist[i]] = gl.getUniformLocation(\r\n            prog,\r\n            uniformlist[i]\r\n          );\r\n        }\r\n      }\r\n\r\n      if (attrlist) {\r\n        prog.attributes = {};\r\n        for (let i = 0; i < attrlist.length; i++) {\r\n          let attr = attrlist[i];\r\n          prog.attributes[attr] = gl.getAttribLocation(prog, attr);\r\n        }\r\n      }\r\n\r\n      return prog;\r\n    }\r\n\r\n    function useShader(prog: any) {\r\n      gl.useProgram(prog);\r\n      for (let attr in prog.attributes) {\r\n        gl.enableVertexAttribArray(prog.attributes[attr]);\r\n      }\r\n    }\r\n\r\n    function unuseShader(prog: any) {\r\n      for (let attr in prog.attributes) {\r\n        gl.disableVertexAttribArray(prog.attributes[attr]);\r\n      }\r\n      gl.useProgram(null);\r\n    }\r\n\r\n    /////\r\n    var projection: any = {\r\n      angle: 60,\r\n      nearfar: new Float32Array([0.1, 100.0]),\r\n      matrix: Matrix44.createIdentity()\r\n    };\r\n    var camera: any = {\r\n      position: Vector3.create(0, 0, 100),\r\n      lookat: Vector3.create(0, 0, 0),\r\n      up: Vector3.create(0, 1, 0),\r\n      dof: Vector3.create(10.0, 4.0, 8.0),\r\n      matrix: Matrix44.createIdentity()\r\n    };\r\n\r\n    var pointFlower: any = {};\r\n    // var meshFlower = {};\r\n    var sceneStandBy: any = false;\r\n\r\n    var BlossomParticle: any = function() {\r\n      this.velocity = new Array(3);\r\n      this.rotation = new Array(3);\r\n      this.position = new Array(3);\r\n      this.euler = new Array(3);\r\n      this.size = 1.0;\r\n      this.alpha = 1.0;\r\n      this.zkey = 0.0;\r\n    };\r\n\r\n    BlossomParticle.prototype.setVelocity = function(\r\n      vx: any,\r\n      vy: any,\r\n      vz: any\r\n    ) {\r\n      this.velocity[0] = vx;\r\n      this.velocity[1] = vy;\r\n      this.velocity[2] = vz;\r\n    };\r\n\r\n    BlossomParticle.prototype.setRotation = function(\r\n      rx: any,\r\n      ry: any,\r\n      rz: any\r\n    ) {\r\n      this.rotation[0] = rx;\r\n      this.rotation[1] = ry;\r\n      this.rotation[2] = rz;\r\n    };\r\n\r\n    BlossomParticle.prototype.setPosition = function(\r\n      nx: any,\r\n      ny: any,\r\n      nz: any\r\n    ) {\r\n      this.position[0] = nx;\r\n      this.position[1] = ny;\r\n      this.position[2] = nz;\r\n    };\r\n\r\n    BlossomParticle.prototype.setEulerAngles = function(\r\n      rx: any,\r\n      ry: any,\r\n      rz: any\r\n    ) {\r\n      this.euler[0] = rx;\r\n      this.euler[1] = ry;\r\n      this.euler[2] = rz;\r\n    };\r\n\r\n    BlossomParticle.prototype.setSize = function(s: any) {\r\n      this.size = s;\r\n    };\r\n\r\n    BlossomParticle.prototype.update = function(dt: any, et: any) {\r\n      this.position[0] += this.velocity[0] * dt;\r\n      this.position[1] += this.velocity[1] * dt;\r\n      this.position[2] += this.velocity[2] * dt;\r\n\r\n      this.euler[0] += this.rotation[0] * dt;\r\n      this.euler[1] += this.rotation[1] * dt;\r\n      this.euler[2] += this.rotation[2] * dt;\r\n    };\r\n\r\n    function createPointFlowers() {\r\n      // get point sizes\r\n      var prm: any = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\r\n      renderSpec.pointSize = { min: prm[0], max: prm[1] };\r\n\r\n      var vtxsrc: any = sakura_point_vsh;\r\n      var frgsrc: any = sakura_point_fsh;\r\n\r\n      pointFlower.program = createShader(\r\n        vtxsrc,\r\n        frgsrc,\r\n        [\r\n          \"uProjection\",\r\n          \"uModelview\",\r\n          \"uResolution\",\r\n          \"uOffset\",\r\n          \"uDOF\",\r\n          \"uFade\"\r\n        ],\r\n        [\"aPosition\", \"aEuler\", \"aMisc\"]\r\n      );\r\n\r\n      useShader(pointFlower.program);\r\n      pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\r\n      pointFlower.fader = Vector3.create(0.0, 10.0, 0.0);\r\n\r\n      // paramerters: velocity[3], rotate[3]\r\n      pointFlower.numFlowers = 1600;\r\n      pointFlower.particles = new Array(pointFlower.numFlowers);\r\n      // vertex attributes {position[3], euler_xyz[3], size[1]}\r\n      pointFlower.dataArray = new Float32Array(\r\n        pointFlower.numFlowers * (3 + 3 + 2)\r\n      );\r\n      pointFlower.positionArrayOffset = 0;\r\n      pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\r\n      pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\r\n\r\n      pointFlower.buffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n      unuseShader(pointFlower.program);\r\n\r\n      for (let i = 0; i < pointFlower.numFlowers; i++) {\r\n        pointFlower.particles[i] = new BlossomParticle();\r\n      }\r\n    }\r\n\r\n    function initPointFlowers() {\r\n      //area\r\n      pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\r\n      pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\r\n\r\n      pointFlower.fader.x = 10.0; //env fade start\r\n      pointFlower.fader.y = pointFlower.area.z; //env fade half\r\n      pointFlower.fader.z = 0.1; //near fade start\r\n\r\n      //particles\r\n      var PI2: any = Math.PI * 2.0;\r\n      var tmpv3: any = Vector3.create(0, 0, 0);\r\n      var tmpv: any = 0;\r\n      var symmetryrand: any = function() {\r\n        return Math.random() * 2.0 - 1.0;\r\n      };\r\n      for (let i = 0; i < pointFlower.numFlowers; i++) {\r\n        let tmpprtcl = pointFlower.particles[i];\r\n\r\n        //velocity\r\n        tmpv3.x = symmetryrand() * 0.3 + 0.8;\r\n        tmpv3.y = symmetryrand() * 0.2 - 1.0;\r\n        tmpv3.z = symmetryrand() * 0.3 + 0.5;\r\n        Vector3.normalize(tmpv3);\r\n        tmpv = 2.0 + Math.random() * 1.0;\r\n        tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);\r\n\r\n        //rotation\r\n        tmpprtcl.setRotation(\r\n          symmetryrand() * PI2 * 0.5,\r\n          symmetryrand() * PI2 * 0.5,\r\n          symmetryrand() * PI2 * 0.5\r\n        );\r\n\r\n        //position\r\n        tmpprtcl.setPosition(\r\n          symmetryrand() * pointFlower.area.x,\r\n          symmetryrand() * pointFlower.area.y,\r\n          symmetryrand() * pointFlower.area.z\r\n        );\r\n\r\n        //euler\r\n        tmpprtcl.setEulerAngles(\r\n          Math.random() * Math.PI * 2.0,\r\n          Math.random() * Math.PI * 2.0,\r\n          Math.random() * Math.PI * 2.0\r\n        );\r\n\r\n        //size\r\n        tmpprtcl.setSize(0.9 + Math.random() * 0.1);\r\n      }\r\n    }\r\n\r\n    function renderPointFlowers() {\r\n      //update\r\n      var PI2: any = Math.PI * 2.0;\r\n      // var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\r\n      var repeatPos: any = function(prt: any, cmp: any, limit: any) {\r\n        if (Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\r\n          //out of area\r\n          if (prt.position[cmp] > 0) {\r\n            prt.position[cmp] -= limit * 2.0;\r\n          } else {\r\n            prt.position[cmp] += limit * 2.0;\r\n          }\r\n        }\r\n      };\r\n      var repeatEuler: any = function(prt: any, cmp: any) {\r\n        prt.euler[cmp] = prt.euler[cmp] % PI2;\r\n        if (prt.euler[cmp] < 0.0) {\r\n          prt.euler[cmp] += PI2;\r\n        }\r\n      };\r\n\r\n      for (let i = 0; i < pointFlower.numFlowers; i++) {\r\n        let prtcl = pointFlower.particles[i];\r\n        prtcl.update(timeInfo.delta, timeInfo.elapsed);\r\n        repeatPos(prtcl, 0, pointFlower.area.x);\r\n        repeatPos(prtcl, 1, pointFlower.area.y);\r\n        repeatPos(prtcl, 2, pointFlower.area.z);\r\n        repeatEuler(prtcl, 0);\r\n        repeatEuler(prtcl, 1);\r\n        repeatEuler(prtcl, 2);\r\n\r\n        prtcl.alpha = 1.0; //(pointFlower.area.z - prtcl.position[2]) * 0.5;\r\n\r\n        prtcl.zkey =\r\n          camera.matrix[2] * prtcl.position[0] +\r\n          camera.matrix[6] * prtcl.position[1] +\r\n          camera.matrix[10] * prtcl.position[2] +\r\n          camera.matrix[14];\r\n      }\r\n\r\n      // sort\r\n      pointFlower.particles.sort(function(p0: any, p1: any) {\r\n        return p0.zkey - p1.zkey;\r\n      });\r\n\r\n      // update data\r\n      var ipos: any = pointFlower.positionArrayOffset;\r\n      var ieuler: any = pointFlower.eulerArrayOffset;\r\n      var imisc: any = pointFlower.miscArrayOffset;\r\n      for (let i = 0; i < pointFlower.numFlowers; i++) {\r\n        let prtcl = pointFlower.particles[i];\r\n        pointFlower.dataArray[ipos] = prtcl.position[0];\r\n        pointFlower.dataArray[ipos + 1] = prtcl.position[1];\r\n        pointFlower.dataArray[ipos + 2] = prtcl.position[2];\r\n        ipos += 3;\r\n        pointFlower.dataArray[ieuler] = prtcl.euler[0];\r\n        pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];\r\n        pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];\r\n        ieuler += 3;\r\n        pointFlower.dataArray[imisc] = prtcl.size;\r\n        pointFlower.dataArray[imisc + 1] = prtcl.alpha;\r\n        imisc += 2;\r\n      }\r\n\r\n      //draw\r\n      gl.enable(gl.BLEND);\r\n      //gl.disable(gl.DEPTH_TEST);\r\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n      var prog: any = pointFlower.program;\r\n      useShader(prog);\r\n\r\n      gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\r\n      gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\r\n      gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\r\n      gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\r\n      gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\r\n\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\r\n\r\n      gl.vertexAttribPointer(\r\n        prog.attributes.aPosition,\r\n        3,\r\n        gl.FLOAT,\r\n        false,\r\n        0,\r\n        pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT\r\n      );\r\n      gl.vertexAttribPointer(\r\n        prog.attributes.aEuler,\r\n        3,\r\n        gl.FLOAT,\r\n        false,\r\n        0,\r\n        pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT\r\n      );\r\n      gl.vertexAttribPointer(\r\n        prog.attributes.aMisc,\r\n        2,\r\n        gl.FLOAT,\r\n        false,\r\n        0,\r\n        pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT\r\n      );\r\n\r\n      // doubler\r\n      for (let i = 1; i < 2; i++) {\r\n        let zpos = i * -2.0;\r\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\r\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\r\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\r\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\r\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\r\n\r\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\r\n        pointFlower.offset[1] = pointFlower.area.y * 1.0;\r\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\r\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\r\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\r\n\r\n        pointFlower.offset[0] = pointFlower.area.x * 1.0;\r\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\r\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\r\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\r\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\r\n\r\n        pointFlower.offset[0] = pointFlower.area.x * 1.0;\r\n        pointFlower.offset[1] = pointFlower.area.y * 1.0;\r\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\r\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\r\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\r\n      }\r\n\r\n      //main\r\n      pointFlower.offset[0] = 0.0;\r\n      pointFlower.offset[1] = 0.0;\r\n      pointFlower.offset[2] = 0.0;\r\n      gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\r\n      gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\r\n\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n      unuseShader(prog);\r\n\r\n      gl.enable(gl.DEPTH_TEST);\r\n      gl.disable(gl.BLEND);\r\n    }\r\n\r\n    // effects\r\n    //common util\r\n    function createEffectProgram(\r\n      vtxsrc: any,\r\n      frgsrc: any,\r\n      exunifs: any,\r\n      exattrs: any\r\n    ) {\r\n      var ret: any = {};\r\n      var unifs: any = [\"uResolution\", \"uSrc\", \"uDelta\"];\r\n      if (exunifs) {\r\n        unifs = unifs.concat(exunifs);\r\n      }\r\n      var attrs: any = [\"aPosition\"];\r\n      if (exattrs) {\r\n        attrs = attrs.concat(exattrs);\r\n      }\r\n\r\n      ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\r\n      useShader(ret.program);\r\n\r\n      ret.dataArray = new Float32Array([\r\n        -1.0,\r\n        -1.0,\r\n        1.0,\r\n        -1.0,\r\n        -1.0,\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ]);\r\n      ret.buffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\r\n\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n      unuseShader(ret.program);\r\n\r\n      return ret;\r\n    }\r\n\r\n    // basic usage\r\n    // useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize\r\n    // gl.uniform**(...); //additional uniforms\r\n    // drawEffect()\r\n    // unuseEffect(prog)\r\n    // TEXTURE0 makes src\r\n    function useEffect(fxobj: any, srctex: any) {\r\n      var prog: any = fxobj.program;\r\n      useShader(prog);\r\n      gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\r\n\r\n      if (srctex != null) {\r\n        gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\r\n        gl.uniform1i(prog.uniforms.uSrc, 0);\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\r\n      }\r\n    }\r\n    function drawEffect(fxobj: any) {\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\r\n      gl.vertexAttribPointer(\r\n        fxobj.program.attributes.aPosition,\r\n        2,\r\n        gl.FLOAT,\r\n        false,\r\n        0,\r\n        0\r\n      );\r\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n    }\r\n    function unuseEffect(fxobj: any) {\r\n      unuseShader(fxobj.program);\r\n    }\r\n\r\n    var effectLib: any = {};\r\n    function createEffectLib() {\r\n      var vtxsrc: any, frgsrc: any;\r\n      //common\r\n      var cmnvtxsrc: any = fx_common_vsh;\r\n\r\n      //background\r\n      frgsrc = bg_fsh;\r\n      effectLib.sceneBg = createEffectProgram(\r\n        cmnvtxsrc,\r\n        frgsrc,\r\n        [\"uTimes\"],\r\n        null\r\n      );\r\n\r\n      // make brightpixels buffer\r\n      frgsrc = fx_brightbuf_fsh;\r\n      effectLib.mkBrightBuf = createEffectProgram(\r\n        cmnvtxsrc,\r\n        frgsrc,\r\n        null,\r\n        null\r\n      );\r\n\r\n      // direction blur\r\n      frgsrc = fx_dirblur_r4_fsh;\r\n      effectLib.dirBlur = createEffectProgram(\r\n        cmnvtxsrc,\r\n        frgsrc,\r\n        [\"uBlurDir\"],\r\n        null\r\n      );\r\n\r\n      //final composite\r\n      vtxsrc = pp_final_vsh;\r\n      frgsrc = pp_final_fsh;\r\n      // console.log('frgsrc :',frgsrc )\r\n      effectLib.finalComp = createEffectProgram(\r\n        vtxsrc,\r\n        frgsrc,\r\n        [\"uBloom\"],\r\n        null\r\n      );\r\n    }\r\n\r\n    // background\r\n    function createBackground() {\r\n      //console.log(\"create background\");\r\n    }\r\n    function initBackground() {\r\n      //console.log(\"init background\");\r\n    }\r\n    function renderBackground() {\r\n      gl.disable(gl.DEPTH_TEST);\r\n\r\n      useEffect(effectLib.sceneBg, null);\r\n      gl.uniform2f(\r\n        effectLib.sceneBg.program.uniforms.uTimes,\r\n        timeInfo.elapsed,\r\n        timeInfo.delta\r\n      );\r\n      drawEffect(effectLib.sceneBg);\r\n      unuseEffect(effectLib.sceneBg);\r\n\r\n      gl.enable(gl.DEPTH_TEST);\r\n    }\r\n\r\n    // post process\r\n    // var postProcess = {};\r\n    function createPostProcess() {\r\n      //console.log(\"create post process\");\r\n    }\r\n    function initPostProcess() {\r\n      //console.log(\"init post process\");\r\n    }\r\n\r\n    function renderPostProcess() {\r\n      gl.enable(gl.TEXTURE_2D);\r\n      gl.disable(gl.DEPTH_TEST);\r\n      var bindRT: any = function(rt: any, isclear: any) {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\r\n        gl.viewport(0, 0, rt.width, rt.height);\r\n        if (isclear) {\r\n          gl.clearColor(0, 0, 0, 0);\r\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        }\r\n      };\r\n\r\n      //make bright buff\r\n      bindRT(renderSpec.wHalfRT0, true);\r\n      useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\r\n      drawEffect(effectLib.mkBrightBuf);\r\n      unuseEffect(effectLib.mkBrightBuf);\r\n\r\n      // make bloom\r\n      for (let i = 0; i < 2; i++) {\r\n        let p = 1.5 + 1 * i;\r\n        let s = 2.0 + 1 * i;\r\n        bindRT(renderSpec.wHalfRT1, true);\r\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\r\n        gl.uniform4f(\r\n          effectLib.dirBlur.program.uniforms.uBlurDir,\r\n          p,\r\n          0.0,\r\n          s,\r\n          0.0\r\n        );\r\n        drawEffect(effectLib.dirBlur);\r\n        unuseEffect(effectLib.dirBlur);\r\n\r\n        bindRT(renderSpec.wHalfRT0, true);\r\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\r\n        gl.uniform4f(\r\n          effectLib.dirBlur.program.uniforms.uBlurDir,\r\n          0.0,\r\n          p,\r\n          0.0,\r\n          s\r\n        );\r\n        drawEffect(effectLib.dirBlur);\r\n        unuseEffect(effectLib.dirBlur);\r\n      }\r\n\r\n      //display\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n      gl.viewport(0, 0, renderSpec.width, renderSpec.height);\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n      useEffect(effectLib.finalComp, renderSpec.mainRT);\r\n      gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\r\n      gl.activeTexture(gl.TEXTURE1);\r\n      gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\r\n      drawEffect(effectLib.finalComp);\r\n      unuseEffect(effectLib.finalComp);\r\n\r\n      gl.enable(gl.DEPTH_TEST);\r\n    }\r\n\r\n    /////\r\n    // var SceneEnv = {};\r\n    function createScene() {\r\n      createEffectLib();\r\n      createBackground();\r\n      createPointFlowers();\r\n      createPostProcess();\r\n      sceneStandBy = true;\r\n    }\r\n\r\n    function initScene() {\r\n      initBackground();\r\n      initPointFlowers();\r\n      initPostProcess();\r\n\r\n      //camera.position.z = 17.320508;\r\n      camera.position.z = pointFlower.area.z + projection.nearfar[0];\r\n      projection.angle =\r\n        ((Math.atan2(\r\n          pointFlower.area.y,\r\n          camera.position.z + pointFlower.area.z\r\n        ) *\r\n          180.0) /\r\n          Math.PI) *\r\n        2.0;\r\n      Matrix44.loadProjection(\r\n        projection.matrix,\r\n        renderSpec.aspect,\r\n        projection.angle,\r\n        projection.nearfar[0],\r\n        projection.nearfar[1]\r\n      );\r\n    }\r\n\r\n    function renderScene() {\r\n      //draw\r\n      Matrix44.loadLookAt(\r\n        camera.matrix,\r\n        camera.position,\r\n        camera.lookat,\r\n        camera.up\r\n      );\r\n\r\n      gl.enable(gl.DEPTH_TEST);\r\n\r\n      //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\r\n      gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\r\n      gl.clearColor(0.005, 0, 0.05, 0);\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n      renderBackground();\r\n      renderPointFlowers();\r\n      renderPostProcess();\r\n    }\r\n\r\n    /////\r\n    function onResize(e: any) {\r\n      makeCanvasFullScreen(document.getElementById(\"sakura\"));\r\n      setViewports();\r\n      if (sceneStandBy) {\r\n        initScene();\r\n      }\r\n    }\r\n\r\n    function setViewports() {\r\n      renderSpec.setSize(gl.canvas.width, gl.canvas.height);\r\n\r\n      gl.clearColor(0.2, 0.2, 0.5, 1.0);\r\n      gl.viewport(0, 0, renderSpec.width, renderSpec.height);\r\n\r\n      var rtfunc: any = function(rtname: any, rtw: any, rth: any) {\r\n        var rt: any = renderSpec[rtname];\r\n        if (rt) deleteRenderTarget(rt);\r\n        renderSpec[rtname] = createRenderTarget(rtw, rth);\r\n      };\r\n      rtfunc(\"mainRT\", renderSpec.width, renderSpec.height);\r\n      rtfunc(\"wFullRT0\", renderSpec.width, renderSpec.height);\r\n      rtfunc(\"wFullRT1\", renderSpec.width, renderSpec.height);\r\n      rtfunc(\"wHalfRT0\", renderSpec.halfWidth, renderSpec.halfHeight);\r\n      rtfunc(\"wHalfRT1\", renderSpec.halfWidth, renderSpec.halfHeight);\r\n    }\r\n\r\n    function render() {\r\n      renderScene();\r\n    }\r\n\r\n    var animating: boolean = true;\r\n\r\n    function animate() {\r\n      var curdate: any = new Date();\r\n      timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\r\n      timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\r\n      timeInfo.prev = curdate;\r\n\r\n      if (animating) requestAnimationFrame(animate);\r\n      render();\r\n    }\r\n\r\n    function makeCanvasFullScreen(canvas: any) {\r\n      var b: any = document.body;\r\n      var d: any = document.documentElement;\r\n      let fullw = Math.max(\r\n        b.clientWidth,\r\n        b.scrollWidth,\r\n        d.scrollWidth,\r\n        d.clientWidth\r\n      );\r\n      let fullh = Math.max(\r\n        b.clientHeight,\r\n        b.scrollHeight,\r\n        d.scrollHeight,\r\n        d.clientHeight\r\n      );\r\n      canvas.width = fullw;\r\n      canvas.height = fullh;\r\n    }\r\n\r\n    // window.addEventListener(\"load\", function(e: any) {\r\n    //   var canvas: any = document.getElementById(\"sakura\");\r\n    //   try {\r\n    //     makeCanvasFullScreen(canvas);\r\n    //     gl = canvas.getContext(\"experimental-webgl\");\r\n    //   } catch (e) {\r\n    //     alert(\"WebGL not supported.\" + e);\r\n    //     console.log(\"WebGL not supported :\", e);\r\n    //     return;\r\n    //   }\r\n\r\n    //   window.addEventListener(\"resize\", onResize);\r\n\r\n    //   setViewports();\r\n    //   createScene();\r\n    //   initScene();\r\n\r\n    //   timeInfo.start = new Date();\r\n    //   timeInfo.prev = timeInfo.start;\r\n    //   animate();\r\n    // });\r\n\r\n    // 保证每次都执行\r\n    var canvas: any = document.getElementById(\"sakura\");\r\n    try {\r\n      makeCanvasFullScreen(canvas);\r\n      gl = canvas.getContext(\"experimental-webgl\");\r\n    } catch (e) {\r\n      alert(\"WebGL not supported.\" + e);\r\n      console.error(e);\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"resize\", onResize);\r\n\r\n    setViewports();\r\n    createScene();\r\n    initScene();\r\n\r\n    timeInfo.start = new Date();\r\n    timeInfo.prev = timeInfo.start;\r\n    animate();\r\n\r\n    //set window.requestAnimationFrame\r\n    (function(w: any, r: any) {\r\n      w[\"r\" + r] =\r\n        w[\"r\" + r] ||\r\n        w[\"webkitR\" + r] ||\r\n        w[\"mozR\" + r] ||\r\n        w[\"msR\" + r] ||\r\n        w[\"oR\" + r] ||\r\n        function(c: any) {\r\n          w.setTimeout(c, 1000 / 60);\r\n        };\r\n    })(window, \"equestAnimationFrame\");\r\n  }\r\n}\r\n"],"sourceRoot":""}]}