{"remainingRequest":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\WebStormProject\\blog-vue-typescript\\src\\views\\articleDetail.vue?vue&type=script&lang=ts&","dependencies":[{"path":"E:\\WebStormProject\\blog-vue-typescript\\src\\views\\articleDetail.vue","mtime":1573558720918},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\r\nimport {\r\n  timestampToTime,\r\n  getQueryStringByName,\r\n  isMobileOrPc\r\n} from \"@/utils/utils\";\r\nimport markdown from \"@/utils/markdown\";\r\nimport LoadingCustom from \"@/components/loading.vue\";\r\nimport CommentList from \"@/components/commentList.vue\";\r\nimport {\r\n  ArticleDetailIF,\r\n  LikeParams,\r\n  ArticleDetailParams\r\n} from \"@/types/index\";\r\n\r\ndeclare let document: Document | any;\r\n\r\n@Component({\r\n  components: {\r\n    LoadingCustom,\r\n    CommentList\r\n  }\r\n})\r\nexport default class ArticleDetail extends Vue {\r\n  private btnLoading: boolean = false;\r\n  private isLoadEnd: boolean = false;\r\n  private isLoading: boolean = false;\r\n  private isMobileOrPc: boolean = isMobileOrPc();\r\n  private params: ArticleDetailParams = {\r\n    id: \"\",\r\n    type: 1 //文章类型 => 1: 普通文章，2: 简历，3: 管理员介绍\r\n  };\r\n  private content: string = \"\";\r\n  private articleDetail: ArticleDetailIF = {\r\n    toc: \"\",\r\n    _id: \"\",\r\n    author: \"biaochenxuying\",\r\n    category: [],\r\n    comments: [],\r\n    create_time: \"\",\r\n    desc: \"\",\r\n    content: \"\",\r\n    id: 16,\r\n    img_url: \"\",\r\n    numbers: 0,\r\n    keyword: [],\r\n    like_users: [],\r\n    meta: { views: 0, likes: 0, comments: 0 },\r\n    origin: 0,\r\n    state: 1,\r\n    tags: [],\r\n    title: \"\",\r\n    update_time: \"\"\r\n  };\r\n  private cacheTime: number = 0; // 缓存时间\r\n  private times: number = 0; // 评论次数\r\n  private likeTimes: number = 0; // 点赞次数\r\n\r\n  mounted(): void {\r\n    this.params.id = this.$route.query.article_id;\r\n    // this.params.id = \"5c8cfe5d26bb39b22d3a7aec\";\r\n    if (this.$route.path === \"/about\") {\r\n      this.params.type = 3;\r\n    }\r\n    this.handleSearch();\r\n  }\r\n\r\n  refreshArticle(): void {\r\n    this.handleSearch();\r\n  }\r\n\r\n  private async handleAddComment(): Promise<void> {\r\n    if (!this.articleDetail._id) {\r\n      this.$message({\r\n        message: \"该文章不存在！\",\r\n        type: \"error\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.times > 2) {\r\n      this.$message({\r\n        message: \"您今天评论的次数已经用完，明天再来评论吧！\",\r\n        type: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    let now = new Date();\r\n    let nowTime = now.getTime();\r\n    if (nowTime - this.cacheTime < 4000) {\r\n      this.$message({\r\n        message: \"您评论太过频繁，1 分钟后再来留言吧！\",\r\n        type: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!this.content) {\r\n      this.$message({\r\n        message: \"请输入内容!\",\r\n        type: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n    let user_id = \"\";\r\n    if (window.sessionStorage.userInfo) {\r\n      let userInfo = JSON.parse(window.sessionStorage.userInfo);\r\n      user_id = userInfo._id;\r\n    } else {\r\n      this.$message({\r\n        message: \"登录才能评论，请先登录！\",\r\n        type: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.btnLoading = true;\r\n    await this.$https.post(this.$urls.addComment, {\r\n      article_id: this.articleDetail._id,\r\n      user_id,\r\n      content: this.content\r\n    });\r\n    this.btnLoading = false;\r\n    this.times++;\r\n    this.cacheTime = nowTime;\r\n    this.content = \"\";\r\n    this.$message({\r\n      message: \"操作成功\",\r\n      type: \"success\"\r\n    });\r\n    this.handleSearch();\r\n  }\r\n\r\n  beforeDestroy(): void {\r\n    document.title = \"夜尽天明的博客网站\";\r\n    document\r\n      .getElementById(\"keywords\")\r\n      .setAttribute(\"content\", \"夜尽天明 的博客网站\");\r\n    document\r\n      .getElementById(\"description\")\r\n      .setAttribute(\r\n        \"content\",\r\n        \"分享大前端开发等相关的技术文章，热点资源，全栈程序员的成长之路。\"\r\n      );\r\n  }\r\n\r\n  // // The class component now treats beforeRouteEnter\r\n  // // and beforeRouteLeave as Vue Router hooks\r\n  // beforeRouteEnter (to, from, next) {\r\n  //   console.log('beforeRouteEnter')\r\n  //   next() // needs to be called to confirm the navigation\r\n  // }\r\n\r\n  // beforeRouteLeave (to, from, next) {\r\n  //   console.log('beforeRouteLeave')\r\n  //   document.title = \"夜尽天明的博客网站\";\r\n  //   document\r\n  //     .getElementById(\"keywords\")\r\n  //     .setAttribute(\"content\", \"夜尽天明 的博客网站\");\r\n  //   document\r\n  //     .getElementById(\"description\")\r\n  //     .setAttribute(\r\n  //       \"content\",\r\n  //       \"分享大前端开发等相关的技术文章，热点资源，全栈程序员的成长之路。\"\r\n  //     );\r\n  //   next() // needs to be called to confirm the navigation\r\n  // }\r\n\r\n  async handleSearch(): Promise<void> {\r\n    this.isLoading = true;\r\n    const data: any = await this.$https.post(\r\n      this.$urls.getArticleDetail,\r\n      this.params\r\n    );\r\n    this.isLoading = false;\r\n\r\n    this.articleDetail = data;\r\n    const article = markdown.marked(data.content);\r\n    article.then((res: any) => {\r\n      this.articleDetail.content = res.content;\r\n      this.articleDetail.toc = res.toc;\r\n    });\r\n    let keyword = data.keyword.join(\",\");\r\n    let description = data.desc;\r\n    let title = data.title;\r\n    document.title = title;\r\n    document.querySelector(\"#keywords\").setAttribute(\"content\", keyword);\r\n    document.querySelector(\"#description\").setAttribute(\"content\", description);\r\n  }\r\n\r\n  async likeArticle(): Promise<void> {\r\n    if (!this.articleDetail._id) {\r\n      this.$message({\r\n        message: \"该文章不存在！\",\r\n        type: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.likeTimes > 0) {\r\n      this.$message({\r\n        message: \"您已经点过赞了！悠着点吧！\",\r\n        type: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    let user_id: string = \"\";\r\n    if (window.sessionStorage.userInfo) {\r\n      let userInfo = JSON.parse(window.sessionStorage.userInfo);\r\n      user_id = userInfo._id;\r\n    } else {\r\n      this.$message({\r\n        message: \"登录才能点赞，请先登录！\",\r\n        type: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n    let params: LikeParams = {\r\n      id: this.articleDetail._id,\r\n      user_id\r\n    };\r\n    await this.$https.post(this.$urls.likeArticle, params);\r\n    this.isLoading = false;\r\n\r\n    this.likeTimes++;\r\n    ++this.articleDetail.meta.likes;\r\n    this.$message({\r\n      message: \"操作成功\",\r\n      type: \"success\"\r\n    });\r\n  }\r\n}\r\n",null]}