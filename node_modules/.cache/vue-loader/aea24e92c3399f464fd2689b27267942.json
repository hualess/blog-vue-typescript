{"remainingRequest":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\WebStormProject\\blog-vue-typescript\\src\\views\\project.vue?vue&type=style&index=0&id=1ade7522&lang=less&scoped=true&","dependencies":[{"path":"E:\\WebStormProject\\blog-vue-typescript\\src\\views\\project.vue","mtime":1573558720920},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\less-loader\\dist\\cjs.js","mtime":1573558749669},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.project {\r\n  overflow: hidden;\r\n  padding: 40px 0;\r\n  .el-col-pointer {\r\n    cursor: pointer;\r\n  }\r\n  .content {\r\n    height: 70px;\r\n    text-overflow: ellipsis;\r\n  }\r\n  .image {\r\n    width: 100%;\r\n    height: 250px;\r\n  }\r\n}\r\n",{"version":3,"sources":["project.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"project.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"project left\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col class=\"el-col-pointer\"\r\n              :span=\"isMobileOrPc ? 24 : 12\"\r\n              v-for=\"(l, index) in list\"\r\n              :key=\"l._id\"\r\n              style=\"margin-bottom: 20px\">\r\n        <a :href=\"l.url\"\r\n           target=\"_blank\"\r\n           rel=\"noopener noreferrer\">\r\n          <el-card shadow=\"hover\">\r\n            <img :src=\"l.img\"\r\n                 class=\"image\">\r\n            <div style=\"padding: 14px;\">\r\n              <h4>{{l.title}}</h4>\r\n              <div class=\"content\">{{l.content}}</div>\r\n              <span>\r\n                {{formatTime(l.start_time)}}--\r\n              </span>\r\n              <span>\r\n                {{formatTime(l.end_time)}}\r\n              </span>\r\n            </div>\r\n          </el-card>\r\n        </a>\r\n      </el-col>\r\n    </el-row>\r\n    <LoadingCustom v-if=\"isLoading\"></LoadingCustom>\r\n    <LoadEnd v-if=\"isLoadEnd\"></LoadEnd>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\r\nimport LoadEnd from \"@/components/loadEnd.vue\";\r\nimport LoadingCustom from \"@/components/loading.vue\";\r\nimport {\r\n  throttle,\r\n  getScrollTop,\r\n  getDocumentHeight,\r\n  getWindowHeight,\r\n  getQueryStringByName,\r\n  timestampToTime,\r\n  isMobileOrPc\r\n} from \"@/utils/utils\";\r\nimport { Params, ProjectList, ProjectsData } from \"@/types/index\";\r\n\r\n@Component({\r\n  components: {\r\n    LoadEnd,\r\n    LoadingCustom\r\n  }\r\n})\r\nexport default class Timeline extends Vue {\r\n  private reverse: boolean = true;\r\n  private isLoadEnd: boolean = false;\r\n  private isLoading: boolean = false;\r\n  private isMobileOrPc: boolean = isMobileOrPc();\r\n  private list: ProjectList[] = [];\r\n  private total: number = 0;\r\n  private params: Params = {\r\n    keyword: \"\",\r\n    pageNum: 1,\r\n    pageSize: 10\r\n  };\r\n\r\n  // lifecycle hook\r\n  mounted(): void {\r\n    this.handleSearch();\r\n    window.onscroll = () => {\r\n      if (getScrollTop() + getWindowHeight() > getDocumentHeight() - 100) {\r\n        // 如果不是已经没有数据了，都可以继续滚动加载\r\n        if (this.isLoadEnd === false && this.isLoading === false) {\r\n          this.handleSearch();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private async handleSearch(): Promise<void> {\r\n    this.isLoading = true;\r\n    const data: ProjectsData = await this.$https.get(this.$urls.getProjectList, {\r\n      params: this.params\r\n    });\r\n    this.isLoading = false;\r\n\r\n    this.list = [...this.list, ...data.list];\r\n    this.total = data.count;\r\n    this.params.pageNum++;\r\n    if (this.total === this.list.length) {\r\n      this.isLoadEnd = true;\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.project {\r\n  overflow: hidden;\r\n  padding: 40px 0;\r\n  .el-col-pointer {\r\n    cursor: pointer;\r\n  }\r\n  .content {\r\n    height: 70px;\r\n    text-overflow: ellipsis;\r\n  }\r\n  .image {\r\n    width: 100%;\r\n    height: 250px;\r\n  }\r\n}\r\n</style>\r\n\r\n"]}]}