{"remainingRequest":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\WebStormProject\\blog-vue-typescript\\src\\views\\timeline.vue?vue&type=script&lang=ts&","dependencies":[{"path":"E:\\WebStormProject\\blog-vue-typescript\\src\\views\\timeline.vue","mtime":1573558720920},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\r\nimport LoadEnd from \"@/components/loadEnd.vue\";\r\nimport LoadingCustom from \"@/components/loading.vue\";\r\nimport {\r\n  throttle,\r\n  getScrollTop,\r\n  getDocumentHeight,\r\n  getWindowHeight,\r\n  getQueryStringByName,\r\n  timestampToTime\r\n} from \"@/utils/utils\";\r\nimport { Params, TimelineList, TimelinesData } from \"@/types/index\";\r\n\r\n@Component({\r\n  components: {\r\n    LoadEnd,\r\n    LoadingCustom\r\n  }\r\n})\r\nexport default class Timeline extends Vue {\r\n  private isLoadEnd: boolean = false;\r\n  private isLoading: boolean = false;\r\n  private list: Array<TimelineList> = [];\r\n  private total: number = 0;\r\n  private params: Params = {\r\n    keyword: \"\",\r\n    pageNum: 1,\r\n    pageSize: 10\r\n  };\r\n\r\n  // lifecycle hook\r\n  mounted(): void {\r\n    this.handleSearch();\r\n    window.onscroll = () => {\r\n      if (getScrollTop() + getWindowHeight() > getDocumentHeight() - 100) {\r\n        // 如果不是已经没有数据了，都可以继续滚动加载\r\n        if (this.isLoadEnd === false && this.isLoading === false) {\r\n          this.handleSearch();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private async handleSearch(): Promise<void> {\r\n    this.isLoading = true;\r\n    const data: TimelinesData = await this.$https.get(\r\n      this.$urls.getTimeAxisList,\r\n      {\r\n        params: this.params\r\n      }\r\n    );\r\n    this.isLoading = false;\r\n\r\n    this.list = [...this.list, ...data.list];\r\n    this.total = data.count;\r\n    this.params.pageNum++;\r\n    if (this.total === this.list.length) {\r\n      this.isLoadEnd = true;\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["timeline.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"timeline.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"timeline left\">\r\n    <el-timeline>\r\n      <el-timeline-item v-for=\"(l, i) in list\"\r\n                        :key=\"l._id\"\r\n                        :color=\"l.state === 1 ? 'green' : l.state === 3 ? 'red' : ''\"\r\n                        placement=\"top\"\r\n                        hide-timestamp>\r\n        <el-card>\r\n          <h3>{{l.title}}</h3>\r\n          <p>{{l.content}}</p>\r\n          <p>\r\n            <span>\r\n              {{formatTime(l.start_time)}}--\r\n            </span>\r\n            <span>\r\n              {{formatTime(l.end_time)}}\r\n            </span>\r\n          </p>\r\n        </el-card>\r\n      </el-timeline-item>\r\n    </el-timeline>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\r\nimport LoadEnd from \"@/components/loadEnd.vue\";\r\nimport LoadingCustom from \"@/components/loading.vue\";\r\nimport {\r\n  throttle,\r\n  getScrollTop,\r\n  getDocumentHeight,\r\n  getWindowHeight,\r\n  getQueryStringByName,\r\n  timestampToTime\r\n} from \"@/utils/utils\";\r\nimport { Params, TimelineList, TimelinesData } from \"@/types/index\";\r\n\r\n@Component({\r\n  components: {\r\n    LoadEnd,\r\n    LoadingCustom\r\n  }\r\n})\r\nexport default class Timeline extends Vue {\r\n  private isLoadEnd: boolean = false;\r\n  private isLoading: boolean = false;\r\n  private list: Array<TimelineList> = [];\r\n  private total: number = 0;\r\n  private params: Params = {\r\n    keyword: \"\",\r\n    pageNum: 1,\r\n    pageSize: 10\r\n  };\r\n\r\n  // lifecycle hook\r\n  mounted(): void {\r\n    this.handleSearch();\r\n    window.onscroll = () => {\r\n      if (getScrollTop() + getWindowHeight() > getDocumentHeight() - 100) {\r\n        // 如果不是已经没有数据了，都可以继续滚动加载\r\n        if (this.isLoadEnd === false && this.isLoading === false) {\r\n          this.handleSearch();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private async handleSearch(): Promise<void> {\r\n    this.isLoading = true;\r\n    const data: TimelinesData = await this.$https.get(\r\n      this.$urls.getTimeAxisList,\r\n      {\r\n        params: this.params\r\n      }\r\n    );\r\n    this.isLoading = false;\r\n\r\n    this.list = [...this.list, ...data.list];\r\n    this.total = data.count;\r\n    this.params.pageNum++;\r\n    if (this.total === this.list.length) {\r\n      this.isLoadEnd = true;\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.timeline {\r\n  padding: 40px 0;\r\n  .year {\r\n    font-size: 34px;\r\n    font-weight: bold;\r\n    color: #000;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  .title {\r\n    color: #333;\r\n    &:hover {\r\n      color: #1890ff;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n"]}]}