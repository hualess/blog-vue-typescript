{"remainingRequest":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\WebStormProject\\blog-vue-typescript\\src\\views\\home.vue?vue&type=style&index=0&id=7eb2bc79&lang=less&scoped=true&","dependencies":[{"path":"E:\\WebStormProject\\blog-vue-typescript\\src\\views\\home.vue","mtime":1573558720918},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\less-loader\\dist\\cjs.js","mtime":1573558749669},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WebStormProject\\blog-vue-typescript\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.home {\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  .content {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    font-size: 20px;\r\n    text-align: center;\r\n    padding-top: 12%;\r\n    .home-logo {\r\n      width: 220px;\r\n      border-radius: 50%;\r\n      animation: mylogo 3s;\r\n      -moz-animation: mylogo 3s; /* Firefox */\r\n      -webkit-animation: mylogo 3s; /* Safari and Chrome */\r\n      -o-animation: mylogo 3s; /* Opera */\r\n      animation-iteration-count: infinite;\r\n    }\r\n    .home-header {\r\n      .link {\r\n        display: block;\r\n      }\r\n    }\r\n    .home-body {\r\n      padding-top: 20px;\r\n      .list {\r\n        .link {\r\n          display: inline-block;\r\n          padding: 20px;\r\n          color: #409eff;\r\n          min-width: 80px;\r\n        }\r\n        .link:hover {\r\n          color: rgb(155, 35, 35);\r\n        }\r\n      }\r\n    }\r\n    .introduce {\r\n      padding-top: 20px;\r\n      color: #fff;\r\n    }\r\n  }\r\n}\r\n@keyframes mylogo {\r\n  0% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n  25% {\r\n    transform: rotate(0deg) scale(1, 1);\r\n    opacity: 0.8;\r\n  }\r\n  100% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@-moz-keyframes mylogo {\r\n  0% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n  25% {\r\n    transform: rotate(0deg) scale(1, 1);\r\n    opacity: 0.8;\r\n  }\r\n  100% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@-webkit-keyframes mylogo {\r\n  0% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n  25% {\r\n    transform: rotate(0deg) scale(1, 1);\r\n    opacity: 0.8;\r\n  }\r\n  100% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@-o-keyframes mylogo {\r\n  0% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n  25% {\r\n    transform: rotate(0deg) scale(1, 1);\r\n    opacity: 0.8;\r\n  }\r\n  100% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n}\r\n",{"version":3,"sources":["home.vue"],"names":[],"mappingsmfile":"home.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <canvas id=\"sakura\" />\r\n    <div class=\"content\">\r\n      <div class=\"home-header\">\r\n        <router-link class=\"link\"\r\n                     to=\"/home\">\r\n          <img class=\"home-logo\"\r\n               src=\"../assets/userLogo.jpeg\"\r\n               alt=\"biaochenxuying logo\" />\r\n        </router-link>\r\n      </div>\r\n      <div class=\"home-body\">\r\n        <div class=\"list\">\r\n          <router-link class=\"link\"\r\n                       to=\"/articles\">\r\n            文章\r\n          </router-link>\r\n          <router-link class=\"link\"\r\n                       to=\"/project\">\r\n            项目\r\n          </router-link>\r\n          <a target=\"_blank\"\r\n             rel=\"noopener noreferrer\"\r\n             class=\"link\"\r\n             href=\"https://github.com/biaochenxuying\">\r\n            github\r\n          </a>\r\n          <a target=\"_blank\"\r\n             rel=\"noopener noreferrer\"\r\n             class=\"link\"\r\n             href=\"https://juejin.im/user/591d6b4d0ce463006926ae40\">\r\n            掘金\r\n          </a>\r\n          <a target=\"_blank\"\r\n             rel=\"noopener noreferrer\"\r\n             class=\"link\"\r\n             href=\"https://www.zhihu.com/people/gu-jian-qi-tan-shui/activities\">\r\n            知乎\r\n          </a>\r\n          <a target=\"_blank\"\r\n             rel=\"noopener noreferrer\"\r\n             class=\"link\"\r\n             href=\"https://segmentfault.com/u/biaochenxuying\">\r\n            segmentfault\r\n          </a>\r\n          <a target=\"_blank\"\r\n             rel=\"noopener noreferrer\"\r\n             class=\"link\"\r\n             href=\"https://www.jianshu.com/u/91717b553bfd\">\r\n            简书\r\n          </a>\r\n        </div>\r\n        <div class=\"introduce\"> 时光正好，未来可期，加油 ！ </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n// 满屏落花效果\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\ndeclare var document: Document | any;\r\n\r\n@Component({})\r\nexport default class Home extends Vue {\r\n  mounted() {\r\n    if (document.location.protocol === \"http:\") {\r\n      this.$message({\r\n        message:\r\n          \"本网站已经配置了 https，为了有更好的体验效果，请把地址前缀换成 https 哦\",\r\n        type: \"warning\",\r\n        duration: 3000\r\n      });\r\n    }\r\n    let sakura_point_vsh: string = `\r\n    uniform mat4 uProjection;\r\n    uniform mat4 uModelview;\r\n    uniform vec3 uResolution;\r\n    uniform vec3 uOffset;\r\n    uniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\r\n    uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\r\n\r\n    attribute vec3 aPosition;\r\n    attribute vec3 aEuler;\r\n    attribute vec2 aMisc; //x:size, y:fade\r\n\r\n    varying vec3 pposition;\r\n    varying float psize;\r\n    varying float palpha;\r\n    varying float pdist;\r\n\r\n    //varying mat3 rotMat;\r\n    varying vec3 normX;\r\n    varying vec3 normY;\r\n    varying vec3 normZ;\r\n    varying vec3 normal;\r\n\r\n    varying float diffuse;\r\n    varying float specular;\r\n    varying float rstop;\r\n    varying float distancefade;\r\n\r\n    void main(void) {\r\n        // Projection is based on vertical angle\r\n        vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\r\n        gl_Position = uProjection * pos;\r\n        gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\r\n        \r\n        pposition = pos.xyz;\r\n        psize = aMisc.x;\r\n        pdist = length(pos.xyz);\r\n        palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\r\n        \r\n        vec3 elrsn = sin(aEuler);\r\n        vec3 elrcs = cos(aEuler);\r\n        mat3 rotx = mat3(\r\n            1.0, 0.0, 0.0,\r\n            0.0, elrcs.x, elrsn.x,\r\n            0.0, -elrsn.x, elrcs.x\r\n        );\r\n        mat3 roty = mat3(\r\n            elrcs.y, 0.0, -elrsn.y,\r\n            0.0, 1.0, 0.0,\r\n            elrsn.y, 0.0, elrcs.y\r\n        );\r\n        mat3 rotz = mat3(\r\n            elrcs.z, elrsn.z, 0.0, \r\n            -elrsn.z, elrcs.z, 0.0,\r\n            0.0, 0.0, 1.0\r\n        );\r\n        mat3 rotmat = rotx * roty * rotz;\r\n        normal = rotmat[2];\r\n        \r\n        mat3 trrotm = mat3(\r\n            rotmat[0][0], rotmat[1][0], rotmat[2][0],\r\n            rotmat[0][1], rotmat[1][1], rotmat[2][1],\r\n            rotmat[0][2], rotmat[1][2], rotmat[2][2]\r\n        );\r\n        normX = trrotm[0];\r\n        normY = trrotm[1];\r\n        normZ = trrotm[2];\r\n        \r\n        const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\r\n        \r\n        float tmpdfs = dot(lit, normal);\r\n        if(tmpdfs < 0.0) {\r\n            normal = -normal;\r\n            tmpdfs = dot(lit, normal);\r\n        }\r\n        diffuse = 0.4 + tmpdfs;\r\n        \r\n        vec3 eyev = normalize(-pos.xyz);\r\n        if(dot(eyev, normal) > 0.0) {\r\n            vec3 hv = normalize(eyev + lit);\r\n            specular = pow(max(dot(hv, normal), 0.0), 20.0);\r\n        }\r\n        else {\r\n            specular = 0.0;\r\n        }\r\n        \r\n        rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\r\n        rstop = pow(rstop, 0.5);\r\n        //-0.69315 = ln(0.5)\r\n        distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\r\n    }`;\r\n    let sakura_point_fsh: string = `\r\n    #ifdef GL_ES\r\n    //precision mediump float;\r\n    precision highp float;\r\n    #endif\r\n\r\n    uniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\r\n    uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\r\n\r\n    const vec3 fadeCol = vec3(0.08, 0.03, 0.06);\r\n\r\n    varying vec3 pposition;\r\n    varying float psize;\r\n    varying float palpha;\r\n    varying float pdist;\r\n\r\n    //varying mat3 rotMat;\r\n    varying vec3 normX;\r\n    varying vec3 normY;\r\n    varying vec3 normZ;\r\n    varying vec3 normal;\r\n\r\n    varying float diffuse;\r\n    varying float specular;\r\n    varying float rstop;\r\n    varying float distancefade;\r\n\r\n    float ellipse(vec2 p, vec2 o, vec2 r) {\r\n        vec2 lp = (p - o) / r;\r\n        return length(lp) - 1.0;\r\n    }\r\n\r\n    void main(void) {\r\n        vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\r\n        vec3 d = vec3(0.0, 0.0, -1.0);\r\n        float nd = normZ.z; //dot(-normZ, d);\r\n        if(abs(nd) < 0.0001) discard;\r\n        \r\n        float np = dot(normZ, p);\r\n        vec3 tp = p + d * np / nd;\r\n        vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\r\n        \r\n        //angle = 15 degree\r\n        const float flwrsn = 0.258819045102521;\r\n        const float flwrcs = 0.965925826289068;\r\n        mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\r\n        vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\r\n        \r\n        float r;\r\n        if(flwrp.x < 0.0) {\r\n            r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\r\n        }\r\n        else {\r\n            r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\r\n        }\r\n        \r\n        if(r > rstop) discard;\r\n        \r\n        vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\r\n        float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\r\n        col *= vec3(1.0, grady, grady);\r\n        col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\r\n        col = col * diffuse + specular;\r\n        \r\n        col = mix(fadeCol, col, distancefade);\r\n        \r\n        float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\r\n        alpha = smoothstep(0.0, 1.0, alpha) * palpha;\r\n        \r\n        gl_FragColor = vec4(col * 0.5, alpha);\r\n    }`;\r\n    let fx_common_vsh: string = `\r\n    uniform vec3 uResolution;\r\n    attribute vec2 aPosition;\r\n\r\n    varying vec2 texCoord;\r\n    varying vec2 screenCoord;\r\n\r\n    void main(void) {\r\n        gl_Position = vec4(aPosition, 0.0, 1.0);\r\n        texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\r\n        screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\r\n    }`;\r\n    let bg_fsh: string = `\r\n    #ifdef GL_ES\r\n    //precision mediump float;\r\n    precision highp float;\r\n    #endif\r\n\r\n    uniform vec2 uTimes;\r\n\r\n    varying vec2 texCoord;\r\n    varying vec2 screenCoord;\r\n\r\n    void main(void) {\r\n        vec3 col;\r\n        float c;\r\n        vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\r\n        c = exp(-pow(length(tmpv) * 1.8, 2.0));\r\n        col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\r\n        gl_FragColor = vec4(col * 0.5, 1.0);\r\n    }`;\r\n    let fx_brightbuf_fsh: string = `\r\n    #ifdef GL_ES\r\n    //precision mediump float;\r\n    precision highp float;\r\n    #endif\r\n    uniform sampler2D uSrc;\r\n    uniform vec2 uDelta;\r\n\r\n    varying vec2 texCoord;\r\n    varying vec2 screenCoord;\r\n\r\n    void main(void) {\r\n        vec4 col = texture2D(uSrc, texCoord);\r\n        gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\r\n    }`;\r\n    let fx_dirblur_r4_fsh: string = `\r\n    #ifdef GL_ES\r\n    //precision mediump float;\r\n    precision highp float;\r\n    #endif\r\n    uniform sampler2D uSrc;\r\n    uniform vec2 uDelta;\r\n    uniform vec4 uBlurDir; //dir(x, y), stride(z, w)\r\n\r\n    varying vec2 texCoord;\r\n    varying vec2 screenCoord;\r\n\r\n    void main(void) {\r\n        vec4 col = texture2D(uSrc, texCoord);\r\n        col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\r\n        col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\r\n        col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\r\n        col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\r\n        gl_FragColor = col / 5.0;\r\n    }`;\r\n    let pp_final_vsh: string = `\r\n    uniform vec3 uResolution;\r\n    attribute vec2 aPosition;\r\n    varying vec2 texCoord;\r\n    varying vec2 screenCoord;\r\n    void main(void) {\r\n        gl_Position = vec4(aPosition, 0.0, 1.0);\r\n        texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\r\n        screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\r\n    }`;\r\n    let pp_final_fsh: string = `\r\n    #ifdef GL_ES\r\n    //precision mediump float;\r\n    precision highp float;\r\n    #endif\r\n    uniform sampler2D uSrc;\r\n    uniform sampler2D uBloom;\r\n    uniform vec2 uDelta;\r\n    varying vec2 texCoord;\r\n    varying vec2 screenCoord;\r\n    void main(void) {\r\n        vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\r\n        vec4 bloomcol = texture2D(uBloom, texCoord);\r\n        vec4 col;\r\n        col = srccol + bloomcol * (vec4(1.0) + srccol);\r\n        col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\r\n        col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\r\n        \r\n        gl_FragColor = vec4(col.rgb, 1.0);\r\n        gl_FragColor.a = 1.0;\r\n    }`;\r\n\r\n    // Utilities\r\n    var Vector3: any = {};\r\n    var Matrix44: any = {};\r\n    Vector3.create = function(x: any, y: any, z: any) {\r\n      return { x: x, y: y, z: z };\r\n    };\r\n    Vector3.dot = function(v0: any, v1: any) {\r\n      return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\r\n    };\r\n    Vector3.cross = function(v: any, v0: any, v1: any) {\r\n      v.x = v0.y * v1.z - v0.z * v1.y;\r\n      v.y = v0.z * v1.x - v0.x * v1.z;\r\n      v.z = v0.x * v1.y - v0.y * v1.x;\r\n    };\r\n    Vector3.normalize = function(v: any) {\r\n      var l: any = v.x * v.x + v.y * v.y + v.z * v.z;\r\n      if (l > 0.00001) {\r\n        l = 1.0 / Math.sqrt(l);\r\n        v.x *= l;\r\n        v.y *= l;\r\n        v.z *= l;\r\n      }\r\n    };\r\n    Vector3.arrayForm = function(v: any) {\r\n      if (v.array) {\r\n        v.array[0] = v.x;\r\n        v.array[1] = v.y;\r\n        v.array[2] = v.z;\r\n      } else {\r\n        v.array = new Float32Array([v.x, v.y, v.z]);\r\n      }\r\n      return v.array;\r\n    };\r\n    Matrix44.createIdentity = function() {\r\n      return new Float32Array([\r\n        1.0,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        1.0,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        1.0,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        1.0\r\n      ]);\r\n    };\r\n    Matrix44.loadProjection = function(\r\n      m: any,\r\n      aspect: any,\r\n      vdeg: any,\r\n      near: any,\r\n      far: any\r\n    ) {\r\n      let h = near * Math.tan(((vdeg * Math.PI) / 180.0) * 0.5) * 2.0;\r\n      let w = h * aspect;\r\n\r\n      m[0] = (2.0 * near) / w;\r\n      m[1] = 0.0;\r\n      m[2] = 0.0;\r\n      m[3] = 0.0;\r\n\r\n      m[4] = 0.0;\r\n      m[5] = (2.0 * near) / h;\r\n      m[6] = 0.0;\r\n      m[7] = 0.0;\r\n\r\n      m[8] = 0.0;\r\n      m[9] = 0.0;\r\n      m[10] = -(far + near) / (far - near);\r\n      m[11] = -1.0;\r\n\r\n      m[12] = 0.0;\r\n      m[13] = 0.0;\r\n      m[14] = (-2.0 * far * near) / (far - near);\r\n      m[15] = 0.0;\r\n    };\r\n    Matrix44.loadLookAt = function(m: any, vpos: any, vlook: any, vup: any) {\r\n      let frontv = Vector3.create(\r\n        vpos.x - vlook.x,\r\n        vpos.y - vlook.y,\r\n        vpos.z - vlook.z\r\n      );\r\n      Vector3.normalize(frontv);\r\n      let sidev = Vector3.create(1.0, 0.0, 0.0);\r\n      Vector3.cross(sidev, vup, frontv);\r\n      Vector3.normalize(sidev);\r\n      let topv = Vector3.create(1.0, 0.0, 0.0);\r\n      Vector3.cross(topv, frontv, sidev);\r\n      Vector3.normalize(topv);\r\n\r\n      m[0] = sidev.x;\r\n      m[1] = topv.x;\r\n      m[2] = frontv.x;\r\n      m[3] = 0.0;\r\n\r\n      m[4] = sidev.y;\r\n      m[5] = topv.y;\r\n      m[6] = frontv.y;\r\n      m[7] = 0.0;\r\n\r\n      m[8] = sidev.z;\r\n      m[9] = topv.z;\r\n      m[10] = frontv.z;\r\n      m[11] = 0.0;\r\n\r\n      m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\r\n      m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\r\n      m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\r\n      m[15] = 1.0;\r\n    };\r\n\r\n    //\r\n    var timeInfo: any = {\r\n      start: 0,\r\n      prev: 0, // Date\r\n      delta: 0,\r\n      elapsed: 0 // Number(sec)\r\n    };\r\n\r\n    //\r\n    var gl: any;\r\n    var renderSpec: any = {\r\n      width: 0,\r\n      height: 0,\r\n      aspect: 1,\r\n      array: new Float32Array(3),\r\n      halfWidth: 0,\r\n      halfHeight: 0,\r\n      halfArray: new Float32Array(3)\r\n      // and some render targets. see setViewport()\r\n    };\r\n    renderSpec.setSize = function(w: any, h: any) {\r\n      renderSpec.width = w;\r\n      renderSpec.height = h;\r\n      renderSpec.aspect = renderSpec.width / renderSpec.height;\r\n      renderSpec.array[0] = renderSpec.width;\r\n      renderSpec.array[1] = renderSpec.height;\r\n      renderSpec.array[2] = renderSpec.aspect;\r\n\r\n      renderSpec.halfWidth = Math.floor(w / 2);\r\n      renderSpec.halfHeight = Math.floor(h / 2);\r\n      renderSpec.halfArray[0] = renderSpec.halfWidth;\r\n      renderSpec.halfArray[1] = renderSpec.halfHeight;\r\n      renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\r\n    };\r\n\r\n    function deleteRenderTarget(rt: any) {\r\n      gl.deleteFramebuffer(rt.frameBuffer);\r\n      gl.deleteRenderbuffer(rt.renderBuffer);\r\n      gl.deleteTexture(rt.texture);\r\n    }\r\n\r\n    function createRenderTarget(w: any, h: any) {\r\n      var ret: any = {\r\n        width: w,\r\n        height: h,\r\n        sizeArray: new Float32Array([w, h, w / h]),\r\n        dtxArray: new Float32Array([1.0 / w, 1.0 / h])\r\n      };\r\n      ret.frameBuffer = gl.createFramebuffer();\r\n      ret.renderBuffer = gl.createRenderbuffer();\r\n      ret.texture = gl.createTexture();\r\n\r\n      gl.bindTexture(gl.TEXTURE_2D, ret.texture);\r\n      gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,\r\n        gl.RGBA,\r\n        w,\r\n        h,\r\n        0,\r\n        gl.RGBA,\r\n        gl.UNSIGNED_BYTE,\r\n        null\r\n      );\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\r\n      gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER,\r\n        gl.COLOR_ATTACHMENT0,\r\n        gl.TEXTURE_2D,\r\n        ret.texture,\r\n        0\r\n      );\r\n\r\n      gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\r\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\r\n      gl.framebufferRenderbuffer(\r\n        gl.FRAMEBUFFER,\r\n        gl.DEPTH_ATTACHMENT,\r\n        gl.RENDERBUFFER,\r\n        ret.renderBuffer\r\n      );\r\n\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n      return ret;\r\n    }\r\n\r\n    function compileShader(shtype: any, shsrc: any) {\r\n      var retsh: any = gl.createShader(shtype);\r\n\r\n      gl.shaderSource(retsh, shsrc);\r\n      gl.compileShader(retsh);\r\n\r\n      if (!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\r\n        var errlog: any = gl.getShaderInfoLog(retsh);\r\n        gl.deleteShader(retsh);\r\n        console.error(errlog);\r\n        return null;\r\n      }\r\n      return retsh;\r\n    }\r\n\r\n    function createShader(\r\n      vtxsrc: any,\r\n      frgsrc: any,\r\n      uniformlist: any,\r\n      attrlist: any\r\n    ) {\r\n      var vsh: any = compileShader(gl.VERTEX_SHADER, vtxsrc);\r\n      var fsh: any = compileShader(gl.FRAGMENT_SHADER, frgsrc);\r\n\r\n      if (vsh == null || fsh == null) {\r\n        return null;\r\n      }\r\n\r\n      var prog: any = gl.createProgram();\r\n      gl.attachShader(prog, vsh);\r\n      gl.attachShader(prog, fsh);\r\n\r\n      gl.deleteShader(vsh);\r\n      gl.deleteShader(fsh);\r\n\r\n      gl.linkProgram(prog);\r\n      if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\r\n        var errlog: any = gl.getProgramInfoLog(prog);\r\n        console.error(errlog);\r\n        return null;\r\n      }\r\n\r\n      if (uniformlist) {\r\n        prog.uniforms = {};\r\n        for (var i = 0; i < uniformlist.length; i++) {\r\n          prog.uniforms[uniformlist[i]] = gl.getUniformLocation(\r\n            prog,\r\n            uniformlist[i]\r\n          );\r\n        }\r\n      }\r\n\r\n      if (attrlist) {\r\n        prog.attributes = {};\r\n        for (let i = 0; i < attrlist.length; i++) {\r\n          let attr = attrlist[i];\r\n          prog.attributes[attr] = gl.getAttribLocation(prog, attr);\r\n        }\r\n      }\r\n\r\n      return prog;\r\n    }\r\n\r\n    function useShader(prog: any) {\r\n      gl.useProgram(prog);\r\n      for (let attr in prog.attributes) {\r\n        gl.enableVertexAttribArray(prog.attributes[attr]);\r\n      }\r\n    }\r\n\r\n    function unuseShader(prog: any) {\r\n      for (let attr in prog.attributes) {\r\n        gl.disableVertexAttribArray(prog.attributes[attr]);\r\n      }\r\n      gl.useProgram(null);\r\n    }\r\n\r\n    /////\r\n    var projection: any = {\r\n      angle: 60,\r\n      nearfar: new Float32Array([0.1, 100.0]),\r\n      matrix: Matrix44.createIdentity()\r\n    };\r\n    var camera: any = {\r\n      position: Vector3.create(0, 0, 100),\r\n      lookat: Vector3.create(0, 0, 0),\r\n      up: Vector3.create(0, 1, 0),\r\n      dof: Vector3.create(10.0, 4.0, 8.0),\r\n      matrix: Matrix44.createIdentity()\r\n    };\r\n\r\n    var pointFlower: any = {};\r\n    // var meshFlower = {};\r\n    var sceneStandBy: any = false;\r\n\r\n    var BlossomParticle: any = function() {\r\n      this.velocity = new Array(3);\r\n      this.rotation = new Array(3);\r\n      this.position = new Array(3);\r\n      this.euler = new Array(3);\r\n      this.size = 1.0;\r\n      this.alpha = 1.0;\r\n      this.zkey = 0.0;\r\n    };\r\n\r\n    BlossomParticle.prototype.setVelocity = function(\r\n      vx: any,\r\n      vy: any,\r\n      vz: any\r\n    ) {\r\n      this.velocity[0] = vx;\r\n      this.velocity[1] = vy;\r\n      this.velocity[2] = vz;\r\n    };\r\n\r\n    BlossomParticle.prototype.setRotation = function(\r\n      rx: any,\r\n      ry: any,\r\n      rz: any\r\n    ) {\r\n      this.rotation[0] = rx;\r\n      this.rotation[1] = ry;\r\n      this.rotation[2] = rz;\r\n    };\r\n\r\n    BlossomParticle.prototype.setPosition = function(\r\n      nx: any,\r\n      ny: any,\r\n      nz: any\r\n    ) {\r\n      this.position[0] = nx;\r\n      this.position[1] = ny;\r\n      this.position[2] = nz;\r\n    };\r\n\r\n    BlossomParticle.prototype.setEulerAngles = function(\r\n      rx: any,\r\n      ry: any,\r\n      rz: any\r\n    ) {\r\n      this.euler[0] = rx;\r\n      this.euler[1] = ry;\r\n      this.euler[2] = rz;\r\n    };\r\n\r\n    BlossomParticle.prototype.setSize = function(s: any) {\r\n      this.size = s;\r\n    };\r\n\r\n    BlossomParticle.prototype.update = function(dt: any, et: any) {\r\n      this.position[0] += this.velocity[0] * dt;\r\n      this.position[1] += this.velocity[1] * dt;\r\n      this.position[2] += this.velocity[2] * dt;\r\n\r\n      this.euler[0] += this.rotation[0] * dt;\r\n      this.euler[1] += this.rotation[1] * dt;\r\n      this.euler[2] += this.rotation[2] * dt;\r\n    };\r\n\r\n    function createPointFlowers() {\r\n      // get point sizes\r\n      var prm: any = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\r\n      renderSpec.pointSize = { min: prm[0], max: prm[1] };\r\n\r\n      var vtxsrc: any = sakura_point_vsh;\r\n      var frgsrc: any = sakura_point_fsh;\r\n\r\n      pointFlower.program = createShader(\r\n        vtxsrc,\r\n        frgsrc,\r\n        [\r\n          \"uProjection\",\r\n          \"uModelview\",\r\n          \"uResolution\",\r\n          \"uOffset\",\r\n          \"uDOF\",\r\n          \"uFade\"\r\n        ],\r\n        [\"aPosition\", \"aEuler\", \"aMisc\"]\r\n      );\r\n\r\n      useShader(pointFlower.program);\r\n      pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\r\n      pointFlower.fader = Vector3.create(0.0, 10.0, 0.0);\r\n\r\n      // paramerters: velocity[3], rotate[3]\r\n      pointFlower.numFlowers = 1600;\r\n      pointFlower.particles = new Array(pointFlower.numFlowers);\r\n      // vertex attributes {position[3], euler_xyz[3], size[1]}\r\n      pointFlower.dataArray = new Float32Array(\r\n        pointFlower.numFlowers * (3 + 3 + 2)\r\n      );\r\n      pointFlower.positionArrayOffset = 0;\r\n      pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\r\n      pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\r\n\r\n      pointFlower.buffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n      unuseShader(pointFlower.program);\r\n\r\n      for (let i = 0; i < pointFlower.numFlowers; i++) {\r\n        pointFlower.particles[i] = new BlossomParticle();\r\n      }\r\n    }\r\n\r\n    function initPointFlowers() {\r\n      //area\r\n      pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\r\n      pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\r\n\r\n      pointFlower.fader.x = 10.0; //env fade start\r\n      pointFlower.fader.y = pointFlower.area.z; //env fade half\r\n      pointFlower.fader.z = 0.1; //near fade start\r\n\r\n      //particles\r\n      var PI2: any = Math.PI * 2.0;\r\n      var tmpv3: any = Vector3.create(0, 0, 0);\r\n      var tmpv: any = 0;\r\n      var symmetryrand: any = function() {\r\n        return Math.random() * 2.0 - 1.0;\r\n      };\r\n      for (let i = 0; i < pointFlower.numFlowers; i++) {\r\n        let tmpprtcl = pointFlower.particles[i];\r\n\r\n        //velocity\r\n        tmpv3.x = symmetryrand() * 0.3 + 0.8;\r\n        tmpv3.y = symmetryrand() * 0.2 - 1.0;\r\n        tmpv3.z = symmetryrand() * 0.3 + 0.5;\r\n        Vector3.normalize(tmpv3);\r\n        tmpv = 2.0 + Math.random() * 1.0;\r\n        tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);\r\n\r\n        //rotation\r\n        tmpprtcl.setRotation(\r\n          symmetryrand() * PI2 * 0.5,\r\n          symmetryrand() * PI2 * 0.5,\r\n          symmetryrand() * PI2 * 0.5\r\n        );\r\n\r\n        //position\r\n        tmpprtcl.setPosition(\r\n          symmetryrand() * pointFlower.area.x,\r\n          symmetryrand() * pointFlower.area.y,\r\n          symmetryrand() * pointFlower.area.z\r\n        );\r\n\r\n        //euler\r\n        tmpprtcl.setEulerAngles(\r\n          Math.random() * Math.PI * 2.0,\r\n          Math.random() * Math.PI * 2.0,\r\n          Math.random() * Math.PI * 2.0\r\n        );\r\n\r\n        //size\r\n        tmpprtcl.setSize(0.9 + Math.random() * 0.1);\r\n      }\r\n    }\r\n\r\n    function renderPointFlowers() {\r\n      //update\r\n      var PI2: any = Math.PI * 2.0;\r\n      // var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\r\n      var repeatPos: any = function(prt: any, cmp: any, limit: any) {\r\n        if (Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\r\n          //out of area\r\n          if (prt.position[cmp] > 0) {\r\n            prt.position[cmp] -= limit * 2.0;\r\n          } else {\r\n            prt.position[cmp] += limit * 2.0;\r\n          }\r\n        }\r\n      };\r\n      var repeatEuler: any = function(prt: any, cmp: any) {\r\n        prt.euler[cmp] = prt.euler[cmp] % PI2;\r\n        if (prt.euler[cmp] < 0.0) {\r\n          prt.euler[cmp] += PI2;\r\n        }\r\n      };\r\n\r\n      for (let i = 0; i < pointFlower.numFlowers; i++) {\r\n        let prtcl = pointFlower.particles[i];\r\n        prtcl.update(timeInfo.delta, timeInfo.elapsed);\r\n        repeatPos(prtcl, 0, pointFlower.area.x);\r\n        repeatPos(prtcl, 1, pointFlower.area.y);\r\n        repeatPos(prtcl, 2, pointFlower.area.z);\r\n        repeatEuler(prtcl, 0);\r\n        repeatEuler(prtcl, 1);\r\n        repeatEuler(prtcl, 2);\r\n\r\n        prtcl.alpha = 1.0; //(pointFlower.area.z - prtcl.position[2]) * 0.5;\r\n\r\n        prtcl.zkey =\r\n          camera.matrix[2] * prtcl.position[0] +\r\n          camera.matrix[6] * prtcl.position[1] +\r\n          camera.matrix[10] * prtcl.position[2] +\r\n          camera.matrix[14];\r\n      }\r\n\r\n      // sort\r\n      pointFlower.particles.sort(function(p0: any, p1: any) {\r\n        return p0.zkey - p1.zkey;\r\n      });\r\n\r\n      // update data\r\n      var ipos: any = pointFlower.positionArrayOffset;\r\n      var ieuler: any = pointFlower.eulerArrayOffset;\r\n      var imisc: any = pointFlower.miscArrayOffset;\r\n      for (let i = 0; i < pointFlower.numFlowers; i++) {\r\n        let prtcl = pointFlower.particles[i];\r\n        pointFlower.dataArray[ipos] = prtcl.position[0];\r\n        pointFlower.dataArray[ipos + 1] = prtcl.position[1];\r\n        pointFlower.dataArray[ipos + 2] = prtcl.position[2];\r\n        ipos += 3;\r\n        pointFlower.dataArray[ieuler] = prtcl.euler[0];\r\n        pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];\r\n        pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];\r\n        ieuler += 3;\r\n        pointFlower.dataArray[imisc] = prtcl.size;\r\n        pointFlower.dataArray[imisc + 1] = prtcl.alpha;\r\n        imisc += 2;\r\n      }\r\n\r\n      //draw\r\n      gl.enable(gl.BLEND);\r\n      //gl.disable(gl.DEPTH_TEST);\r\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n      var prog: any = pointFlower.program;\r\n      useShader(prog);\r\n\r\n      gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\r\n      gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\r\n      gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\r\n      gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\r\n      gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\r\n\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\r\n\r\n      gl.vertexAttribPointer(\r\n        prog.attributes.aPosition,\r\n        3,\r\n        gl.FLOAT,\r\n        false,\r\n        0,\r\n        pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT\r\n      );\r\n      gl.vertexAttribPointer(\r\n        prog.attributes.aEuler,\r\n        3,\r\n        gl.FLOAT,\r\n        false,\r\n        0,\r\n        pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT\r\n      );\r\n      gl.vertexAttribPointer(\r\n        prog.attributes.aMisc,\r\n        2,\r\n        gl.FLOAT,\r\n        false,\r\n        0,\r\n        pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT\r\n      );\r\n\r\n      // doubler\r\n      for (let i = 1; i < 2; i++) {\r\n        let zpos = i * -2.0;\r\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\r\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\r\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\r\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\r\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\r\n\r\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\r\n        pointFlower.offset[1] = pointFlower.area.y * 1.0;\r\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\r\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\r\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\r\n\r\n        pointFlower.offset[0] = pointFlower.area.x * 1.0;\r\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\r\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\r\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\r\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\r\n\r\n        pointFlower.offset[0] = pointFlower.area.x * 1.0;\r\n        pointFlower.offset[1] = pointFlower.area.y * 1.0;\r\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\r\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\r\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\r\n      }\r\n\r\n      //main\r\n      pointFlower.offset[0] = 0.0;\r\n      pointFlower.offset[1] = 0.0;\r\n      pointFlower.offset[2] = 0.0;\r\n      gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\r\n      gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\r\n\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n      unuseShader(prog);\r\n\r\n      gl.enable(gl.DEPTH_TEST);\r\n      gl.disable(gl.BLEND);\r\n    }\r\n\r\n    // effects\r\n    //common util\r\n    function createEffectProgram(\r\n      vtxsrc: any,\r\n      frgsrc: any,\r\n      exunifs: any,\r\n      exattrs: any\r\n    ) {\r\n      var ret: any = {};\r\n      var unifs: any = [\"uResolution\", \"uSrc\", \"uDelta\"];\r\n      if (exunifs) {\r\n        unifs = unifs.concat(exunifs);\r\n      }\r\n      var attrs: any = [\"aPosition\"];\r\n      if (exattrs) {\r\n        attrs = attrs.concat(exattrs);\r\n      }\r\n\r\n      ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\r\n      useShader(ret.program);\r\n\r\n      ret.dataArray = new Float32Array([\r\n        -1.0,\r\n        -1.0,\r\n        1.0,\r\n        -1.0,\r\n        -1.0,\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ]);\r\n      ret.buffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\r\n\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n      unuseShader(ret.program);\r\n\r\n      return ret;\r\n    }\r\n\r\n    // basic usage\r\n    // useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize\r\n    // gl.uniform**(...); //additional uniforms\r\n    // drawEffect()\r\n    // unuseEffect(prog)\r\n    // TEXTURE0 makes src\r\n    function useEffect(fxobj: any, srctex: any) {\r\n      var prog: any = fxobj.program;\r\n      useShader(prog);\r\n      gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\r\n\r\n      if (srctex != null) {\r\n        gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\r\n        gl.uniform1i(prog.uniforms.uSrc, 0);\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\r\n      }\r\n    }\r\n    function drawEffect(fxobj: any) {\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\r\n      gl.vertexAttribPointer(\r\n        fxobj.program.attributes.aPosition,\r\n        2,\r\n        gl.FLOAT,\r\n        false,\r\n        0,\r\n        0\r\n      );\r\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n    }\r\n    function unuseEffect(fxobj: any) {\r\n      unuseShader(fxobj.program);\r\n    }\r\n\r\n    var effectLib: any = {};\r\n    function createEffectLib() {\r\n      var vtxsrc: any, frgsrc: any;\r\n      //common\r\n      var cmnvtxsrc: any = fx_common_vsh;\r\n\r\n      //background\r\n      frgsrc = bg_fsh;\r\n      effectLib.sceneBg = createEffectProgram(\r\n        cmnvtxsrc,\r\n        frgsrc,\r\n        [\"uTimes\"],\r\n        null\r\n      );\r\n\r\n      // make brightpixels buffer\r\n      frgsrc = fx_brightbuf_fsh;\r\n      effectLib.mkBrightBuf = createEffectProgram(\r\n        cmnvtxsrc,\r\n        frgsrc,\r\n        null,\r\n        null\r\n      );\r\n\r\n      // direction blur\r\n      frgsrc = fx_dirblur_r4_fsh;\r\n      effectLib.dirBlur = createEffectProgram(\r\n        cmnvtxsrc,\r\n        frgsrc,\r\n        [\"uBlurDir\"],\r\n        null\r\n      );\r\n\r\n      //final composite\r\n      vtxsrc = pp_final_vsh;\r\n      frgsrc = pp_final_fsh;\r\n      // console.log('frgsrc :',frgsrc )\r\n      effectLib.finalComp = createEffectProgram(\r\n        vtxsrc,\r\n        frgsrc,\r\n        [\"uBloom\"],\r\n        null\r\n      );\r\n    }\r\n\r\n    // background\r\n    function createBackground() {\r\n      //console.log(\"create background\");\r\n    }\r\n    function initBackground() {\r\n      //console.log(\"init background\");\r\n    }\r\n    function renderBackground() {\r\n      gl.disable(gl.DEPTH_TEST);\r\n\r\n      useEffect(effectLib.sceneBg, null);\r\n      gl.uniform2f(\r\n        effectLib.sceneBg.program.uniforms.uTimes,\r\n        timeInfo.elapsed,\r\n        timeInfo.delta\r\n      );\r\n      drawEffect(effectLib.sceneBg);\r\n      unuseEffect(effectLib.sceneBg);\r\n\r\n      gl.enable(gl.DEPTH_TEST);\r\n    }\r\n\r\n    // post process\r\n    // var postProcess = {};\r\n    function createPostProcess() {\r\n      //console.log(\"create post process\");\r\n    }\r\n    function initPostProcess() {\r\n      //console.log(\"init post process\");\r\n    }\r\n\r\n    function renderPostProcess() {\r\n      gl.enable(gl.TEXTURE_2D);\r\n      gl.disable(gl.DEPTH_TEST);\r\n      var bindRT: any = function(rt: any, isclear: any) {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\r\n        gl.viewport(0, 0, rt.width, rt.height);\r\n        if (isclear) {\r\n          gl.clearColor(0, 0, 0, 0);\r\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        }\r\n      };\r\n\r\n      //make bright buff\r\n      bindRT(renderSpec.wHalfRT0, true);\r\n      useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\r\n      drawEffect(effectLib.mkBrightBuf);\r\n      unuseEffect(effectLib.mkBrightBuf);\r\n\r\n      // make bloom\r\n      for (let i = 0; i < 2; i++) {\r\n        let p = 1.5 + 1 * i;\r\n        let s = 2.0 + 1 * i;\r\n        bindRT(renderSpec.wHalfRT1, true);\r\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\r\n        gl.uniform4f(\r\n          effectLib.dirBlur.program.uniforms.uBlurDir,\r\n          p,\r\n          0.0,\r\n          s,\r\n          0.0\r\n        );\r\n        drawEffect(effectLib.dirBlur);\r\n        unuseEffect(effectLib.dirBlur);\r\n\r\n        bindRT(renderSpec.wHalfRT0, true);\r\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\r\n        gl.uniform4f(\r\n          effectLib.dirBlur.program.uniforms.uBlurDir,\r\n          0.0,\r\n          p,\r\n          0.0,\r\n          s\r\n        );\r\n        drawEffect(effectLib.dirBlur);\r\n        unuseEffect(effectLib.dirBlur);\r\n      }\r\n\r\n      //display\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n      gl.viewport(0, 0, renderSpec.width, renderSpec.height);\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n      useEffect(effectLib.finalComp, renderSpec.mainRT);\r\n      gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\r\n      gl.activeTexture(gl.TEXTURE1);\r\n      gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\r\n      drawEffect(effectLib.finalComp);\r\n      unuseEffect(effectLib.finalComp);\r\n\r\n      gl.enable(gl.DEPTH_TEST);\r\n    }\r\n\r\n    /////\r\n    // var SceneEnv = {};\r\n    function createScene() {\r\n      createEffectLib();\r\n      createBackground();\r\n      createPointFlowers();\r\n      createPostProcess();\r\n      sceneStandBy = true;\r\n    }\r\n\r\n    function initScene() {\r\n      initBackground();\r\n      initPointFlowers();\r\n      initPostProcess();\r\n\r\n      //camera.position.z = 17.320508;\r\n      camera.position.z = pointFlower.area.z + projection.nearfar[0];\r\n      projection.angle =\r\n        ((Math.atan2(\r\n          pointFlower.area.y,\r\n          camera.position.z + pointFlower.area.z\r\n        ) *\r\n          180.0) /\r\n          Math.PI) *\r\n        2.0;\r\n      Matrix44.loadProjection(\r\n        projection.matrix,\r\n        renderSpec.aspect,\r\n        projection.angle,\r\n        projection.nearfar[0],\r\n        projection.nearfar[1]\r\n      );\r\n    }\r\n\r\n    function renderScene() {\r\n      //draw\r\n      Matrix44.loadLookAt(\r\n        camera.matrix,\r\n        camera.position,\r\n        camera.lookat,\r\n        camera.up\r\n      );\r\n\r\n      gl.enable(gl.DEPTH_TEST);\r\n\r\n      //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\r\n      gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\r\n      gl.clearColor(0.005, 0, 0.05, 0);\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n      renderBackground();\r\n      renderPointFlowers();\r\n      renderPostProcess();\r\n    }\r\n\r\n    /////\r\n    function onResize(e: any) {\r\n      makeCanvasFullScreen(document.getElementById(\"sakura\"));\r\n      setViewports();\r\n      if (sceneStandBy) {\r\n        initScene();\r\n      }\r\n    }\r\n\r\n    function setViewports() {\r\n      renderSpec.setSize(gl.canvas.width, gl.canvas.height);\r\n\r\n      gl.clearColor(0.2, 0.2, 0.5, 1.0);\r\n      gl.viewport(0, 0, renderSpec.width, renderSpec.height);\r\n\r\n      var rtfunc: any = function(rtname: any, rtw: any, rth: any) {\r\n        var rt: any = renderSpec[rtname];\r\n        if (rt) deleteRenderTarget(rt);\r\n        renderSpec[rtname] = createRenderTarget(rtw, rth);\r\n      };\r\n      rtfunc(\"mainRT\", renderSpec.width, renderSpec.height);\r\n      rtfunc(\"wFullRT0\", renderSpec.width, renderSpec.height);\r\n      rtfunc(\"wFullRT1\", renderSpec.width, renderSpec.height);\r\n      rtfunc(\"wHalfRT0\", renderSpec.halfWidth, renderSpec.halfHeight);\r\n      rtfunc(\"wHalfRT1\", renderSpec.halfWidth, renderSpec.halfHeight);\r\n    }\r\n\r\n    function render() {\r\n      renderScene();\r\n    }\r\n\r\n    var animating: boolean = true;\r\n\r\n    function animate() {\r\n      var curdate: any = new Date();\r\n      timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\r\n      timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\r\n      timeInfo.prev = curdate;\r\n\r\n      if (animating) requestAnimationFrame(animate);\r\n      render();\r\n    }\r\n\r\n    function makeCanvasFullScreen(canvas: any) {\r\n      var b: any = document.body;\r\n      var d: any = document.documentElement;\r\n      let fullw = Math.max(\r\n        b.clientWidth,\r\n        b.scrollWidth,\r\n        d.scrollWidth,\r\n        d.clientWidth\r\n      );\r\n      let fullh = Math.max(\r\n        b.clientHeight,\r\n        b.scrollHeight,\r\n        d.scrollHeight,\r\n        d.clientHeight\r\n      );\r\n      canvas.width = fullw;\r\n      canvas.height = fullh;\r\n    }\r\n\r\n    // window.addEventListener(\"load\", function(e: any) {\r\n    //   var canvas: any = document.getElementById(\"sakura\");\r\n    //   try {\r\n    //     makeCanvasFullScreen(canvas);\r\n    //     gl = canvas.getContext(\"experimental-webgl\");\r\n    //   } catch (e) {\r\n    //     alert(\"WebGL not supported.\" + e);\r\n    //     console.log(\"WebGL not supported :\", e);\r\n    //     return;\r\n    //   }\r\n\r\n    //   window.addEventListener(\"resize\", onResize);\r\n\r\n    //   setViewports();\r\n    //   createScene();\r\n    //   initScene();\r\n\r\n    //   timeInfo.start = new Date();\r\n    //   timeInfo.prev = timeInfo.start;\r\n    //   animate();\r\n    // });\r\n\r\n    // 保证每次都执行\r\n    var canvas: any = document.getElementById(\"sakura\");\r\n    try {\r\n      makeCanvasFullScreen(canvas);\r\n      gl = canvas.getContext(\"experimental-webgl\");\r\n    } catch (e) {\r\n      alert(\"WebGL not supported.\" + e);\r\n      console.error(e);\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"resize\", onResize);\r\n\r\n    setViewports();\r\n    createScene();\r\n    initScene();\r\n\r\n    timeInfo.start = new Date();\r\n    timeInfo.prev = timeInfo.start;\r\n    animate();\r\n\r\n    //set window.requestAnimationFrame\r\n    (function(w: any, r: any) {\r\n      w[\"r\" + r] =\r\n        w[\"r\" + r] ||\r\n        w[\"webkitR\" + r] ||\r\n        w[\"mozR\" + r] ||\r\n        w[\"msR\" + r] ||\r\n        w[\"oR\" + r] ||\r\n        function(c: any) {\r\n          w.setTimeout(c, 1000 / 60);\r\n        };\r\n    })(window, \"equestAnimationFrame\");\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.home {\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  .content {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    font-size: 20px;\r\n    text-align: center;\r\n    padding-top: 12%;\r\n    .home-logo {\r\n      width: 220px;\r\n      border-radius: 50%;\r\n      animation: mylogo 3s;\r\n      -moz-animation: mylogo 3s; /* Firefox */\r\n      -webkit-animation: mylogo 3s; /* Safari and Chrome */\r\n      -o-animation: mylogo 3s; /* Opera */\r\n      animation-iteration-count: infinite;\r\n    }\r\n    .home-header {\r\n      .link {\r\n        display: block;\r\n      }\r\n    }\r\n    .home-body {\r\n      padding-top: 20px;\r\n      .list {\r\n        .link {\r\n          display: inline-block;\r\n          padding: 20px;\r\n          color: #409eff;\r\n          min-width: 80px;\r\n        }\r\n        .link:hover {\r\n          color: rgb(155, 35, 35);\r\n        }\r\n      }\r\n    }\r\n    .introduce {\r\n      padding-top: 20px;\r\n      color: #fff;\r\n    }\r\n  }\r\n}\r\n@keyframes mylogo {\r\n  0% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n  25% {\r\n    transform: rotate(0deg) scale(1, 1);\r\n    opacity: 0.8;\r\n  }\r\n  100% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@-moz-keyframes mylogo {\r\n  0% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n  25% {\r\n    transform: rotate(0deg) scale(1, 1);\r\n    opacity: 0.8;\r\n  }\r\n  100% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@-webkit-keyframes mylogo {\r\n  0% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n  25% {\r\n    transform: rotate(0deg) scale(1, 1);\r\n    opacity: 0.8;\r\n  }\r\n  100% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@-o-keyframes mylogo {\r\n  0% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n  25% {\r\n    transform: rotate(0deg) scale(1, 1);\r\n    opacity: 0.8;\r\n  }\r\n  100% {\r\n    transform: rotate(0deg) scale(0.8, 0.8);\r\n    opacity: 1;\r\n  }\r\n}\r\n</style>\r\n\r\n"]}]}